/*
 * Rayman2 Mod Loader
 * Rayman2 function pointers
 */

#ifndef RAYMAN2MODLOADER_FUNCTIONS_H
#define RAYMAN2MODLOADER_FUNCTIONS_H

FunctionPointer(int, fn_vInitEngineWhenInitApplication, (), 0x401000);
FunctionPointer(int, OpenThreadEvents, (), 0x401080);
VoidFunc(UpdateGame, 0x4010B0);
FunctionPointer(int, j_fn_vChooseTheGoodDesInit, (), 0x4010F0);
FunctionPointer(int, CheckExitEvent, (), 0x401100);
FunctionPointer(int, DrawFrame, (), 0x401160);
FunctionPointer(int, ExitRayman, (), 0x4011C0);
FunctionPointer(int, MainGameLoop, (), 0x401210);
FunctionPointer(int, fn_hGetDrawSemaphore, (), 0x4013E0);
FunctionPointer(int, GetWindowHandle, (), 0x401400);
FunctionPointer(bool, CheckPause, (int), 0x4016E0);
FunctionPointer(int, CreateGameWindow, (HINSTANCE hInstance, int nCmdShow), 0x402020);
FunctionPointer(int, InitGraphics, (), 0x402150);
StdcallFunctionPointer(LRESULT, WndProc, (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam), 0x4022D0);
FunctionPointer(int, Erm_fn_ucInitErrMsg, (), 0x4025D0);
FunctionPointer(int, Erm_fn_uwCheckError, (char, int), 0x402600);
FunctionPointer(int, Erm_fn_ClearLastError, (int a1), 0x402710);
FunctionPointer(double, Erm_fn_v_UpdateLastError, (__int16, char, int, __int16, int, int, int, int), 0x402810);
FunctionPointer(int, MessageBoxShow, (LPCSTR lpText, LPCSTR lpCaption, UINT uType), 0x4028F0);
VoidFunc(fn_vLoadFix, 0x402960);
FunctionPointer(int, fn_vInitGameLoop, (), 0x4030C0);
FunctionPointer(int, fn_vInitDeadLoop, (), 0x403150);
FunctionPointer(int, fn_vDesInitDeadLoop, (), 0x403280);
StdcallFunctionPointer(int, _SND_fn_vDesInitErrorSnd, (), 0x403290);
FunctionPointer(int, fn_vReinitTheMap, (), 0x4032A0);
FunctionPointer(HIE_tdstSuperObject*, fn_vReinitTheStaticHierarchie, (HIE_tdstSuperObject* parent), 0x403390);
VoidFunc(_fn_vFirstInitEngine, 0x403430);
FunctionPointer(int, _fn_vInitLevelLoop, (), 0x403730);
FunctionPointer(int, fn_vDesInitLevelLoop, (), 0x4044A0);
FunctionPointer(int, fn_vCopyProtectKeyToModels, (), 0x4045F0);
FunctionPointer(int, fn_vChooseTheGoodDesInit, (), 0x404940);
FunctionPointer(int, LoadDSCFiles, (), 0x404A40);
FunctionPointer(void, fn_vChangeEngineMode, (ENGINE_STATE mode), 0x404BF0);
FunctionPointer(int, fn_vSetFirstLevelName, (const char* levelName), 0x404CC0);
FunctionPointer(const char*, fn_p_szGetFirstLevelName, (), 0x404CF0);
FunctionPointer(char*, fn_vSetLevelName, (const char* levelName), 0x404D00);
FunctionPointer(const char*, fn_p_szGetLevelName, (), 0x404DA0);
FunctionPointer(int, fn_vSetNextLevelName, (const char* levelName), 0x404DC0);
FunctionPointer(const char*, fn_p_szGetNextLevelName, (), 0x404DF0);
FunctionPointer(int, fn_vFreeNextLevelName, (), 0x404E00);
FunctionPointer(int, fn_bIsNextLevelNameValid, (), 0x404E10);
FunctionPointer(int, GAM_fn_vDestroyGameDeviceAndViewPorts, (), 0x405170);
FunctionPointer(int, fn_vReputGameViewportCamera, (), 0x405460);
FunctionPointer(void, GAM_fn_vAskToChangeLevel, (const char* levelName, char saveBeforeChange), 0x4054D0);
FunctionPointer(int, GAM_fn_vSetEngineInFixMode, (), 0x405810);
FunctionPointer(int, GAM_fn_vSetEngineInLevelMode, (), 0x405830);
FunctionPointer(int, GAM_fn_vTreatExeParameters_unsure, (), 0x405850);
FunctionPointer(int, GetINIConfigVariable, (LPCSTR lpAppName, LPCSTR lpKeyName, DWORD nSize, LPCSTR lpReturnedString), 0x405930);
FunctionPointer(int, GAM_fn_vReadUbiIniFileForGame, (), 0x405A30);
FunctionPointer(int, pausegame_maybe, (), 0x405CC0);
FunctionPointer(int, resumegame_maybe, (), 0x405CE0);
FunctionPointer(int, fn_bIsEngineInPause_maybe, (), 0x405D00);
FunctionPointer(int, _fn_vDestroyAllHierarchy, (int a1), 0x405D10);
FunctionPointer(unsigned int, fn_p_stFreeEngineSuperObject, (HIE_tdstSuperObject* a1), 0x405DC0);
FunctionPointer(int, fn_p_stFreeEngineObject, (tdstEngineObject* a1), 0x405E10);
FunctionPointer(void, fn_vInitOneObject, (OLDtdstEngineObject* engineObject, int someInt), 0x405E50);
FunctionPointer(void, fn_vDesinitOneObject, (int engineObject, int a2), 0x405F00);
FunctionPointer(bool, fn_vKillEngineObjectNotAlways, (uint32_t a1), 0x406220);
FunctionPointer(int, _fn_vKillEngineObjectOrAlwaysByPointer, (int a1), 0x4062A0);
FunctionPointer(int, fn_vInitAllObjectsWhenMapJustLoaded, (), 0x4062F0);
FunctionPointer(int, fn_vInitAllObjectsWorld, (int a1), 0x406310);
FunctionPointer(int, fn_vInitAllObjectsWhenSavedGameJustLoaded, (), 0x406340);
FunctionPointer(double, fn_vInitObjectsWhenPlayerChangeSector, (int, int, int), 0x4063E0);
FunctionPointer(int, fn_vForceReinitAllObjects, (), 0x406470);
FunctionPointer(int, fn_vSnifThePlayerIsDeadWithResurrectionAt, (int, int), 0x4064D0);
FunctionPointer(void, fn_vInitAllObjectTree, (int a1, Sector* dynamicWorld), 0x406620);
FunctionPointer(int, fn_v_InitInterpol, (), 0x406820);
FunctionPointer(int, fn_vFirstInitGameMemory, (), 0x4077A0);
FunctionPointer(int, GAM_fn_vSetGameMemoryInFix, (), 0x4077C0);
FunctionPointer(int, GAM_fn_vSetGameMemoryInLevel, (), 0x4077D0);
FunctionPointer(int, HMU_fn_vFree, (int a1), 0x4078C0);
FunctionPointer(int, fn_vFreeLevelAllowedMemory, (), 0x407920);
FunctionPointer(int, fn_vLastDesinitFamilyStructure, (), 0x4079B0);
FunctionPointer(int, _fn_vDesinitFamilyStructureForPriority, (), 0x407A20);
FunctionPointer(int, fn_p_stMSLightGetLight, (int a1), 0x407AA0);
FunctionPointer(int, fn_bSaveCurrentGameOptions, (), 0x407B80);
FunctionPointer(int, GetFirstAvailableSlot, (int saveFolder), 0x408200);
FunctionPointer(int, TFMT_vSetDefaultValuesCharacter, (int, float, float), 0x408590);
FunctionPointer(int, TFMT_wPositionModulesAccordingToText, (int, int, int, int, int, int, int, char), 0x409720);
FunctionPointer(int, TFMT_vInitTextAfficheStructure, (), 0x4099D0);
FunctionPointer(uint32_t*, TFMT_ucClearNumberOfCurrentTextAffiche, (HIE_tdstSuperObject* a2), 0x409A90);
FunctionPointer(int, fn_vStartEngineClock, (), 0x409D40);
FunctionPointer(int, fn_vStopEngineClock, (), 0x409DC0);
FunctionPointer(int, GAM_fn_bInitSoundTypes, (), 0x40A3E0);
FunctionPointer(int, GAM_fn_lSaveBlockEventSlotMemory, (int, int), 0x40A5A0);
FunctionPointer(int, GAM_p_stGetBlockEventSlotMemory, (int a1), 0x40A5B0);
FunctionPointer(void, fn_vTreatCharactersInSector, (HIE_tdstSuperObject* sector), 0x40A5C0);
FunctionPointer(void, fn_vTreatDynamicHierarchy, (HIE_tdstSuperObject* sector, HIE_tdstSuperObject* parent, Vector3* vector), 0x40A7C0);
FunctionPointer(char, fn_vTreatDynamicHierarchyOfPlatForms, (HIE_tdstSuperObject* sector), 0x40AA10);
FunctionPointer(char, fn_vTreatCameraHierarchy, (HIE_tdstSuperObject* parent), 0x40AB90);
FunctionPointer(int, fn_vSendBackGroundColor, (int a1), 0x40AD00);
FunctionPointer(int, _fn_vEngine, (), 0x40ADA0);
FunctionPointer(void*, fn_vReputCharacterSuperObjectAtTheWorld, (HIE_tdstSuperObject* superObject), 0x40B040);
FunctionPointer(int, fn_vRecurseDestructChildLink, (int a1), 0x40B060);
FunctionPointer(int, fn_vDestructAllFatherSonLinks, (), 0x40B0E0);
FunctionPointer(int, _fn_vDisplayAll, (), 0x40B150);
FunctionPointer(int, fn_vClearDynamicHierarchy, (int a1), 0x40B290);
FunctionPointer(int, fn_vDesinitInactivePerso, (), 0x40B410);
FunctionPointer(uint32_t*, fn_vInsertActorInDynamicHierarchy, (HIE_tdstSuperObject* actor, char a2), 0x40B4C0);
FunctionPointer(HIE_tdstSuperObject*, fn_vFillDynamicHierarchy, (HIE_tdstSuperObject_Sector* sector, char insertOption___), 0x40B620);
FunctionPointer(int, fn_vUpdateDynamicHierarchy, (), 0x40B7B0);
FunctionPointer(int, CAM_fn_hGetActiveCamera, (int a1), 0x40B830);
FunctionPointer(int, CAM_fn_vReinitCameras, (), 0x40B860);
FunctionPointer(int, CAM_fn_vInitCameras, (), 0x40B8D0);
FunctionPointer(bool, CAM_fn_bSuperObjectIsACamera, (HIE_tdstSuperObject* a1), 0x40B930);
FunctionPointer(int, CAM_fn_vActualizeAViewport, (float), 0x40B950);
FunctionPointer(int, CAM_fn_vCameraManagement, (), 0x40BAD0);
FunctionPointer(int, fn_vLastDesinitAlwaysStructure, (), 0x40BB50);
FunctionPointer(int, fn_vKillAllAlwaysModel, (), 0x40BB80);
FunctionPointer(int, fn_vInitAlwaysModel, (int a1), 0x40BC30);
FunctionPointer(int, _fn_ucIsAnAlwaysObject, (tdstEngineObject* engineObject), 0x40BC60);
FunctionPointer(int, fn_p_stAllocateAlways, (int, int, int, int, int), 0x40BCC0);
FunctionPointer(int, fn_vKillAlwaysByPersonalType, (int a1), 0x40C0C0);
FunctionPointer(int, fn_vKillAllAlways, (), 0x40C200);
FunctionPointer(int, fn_vKillAllAlwaysInNonActiveSectors, (), 0x40C2F0);
FunctionPointer(int, fn_hIsThisZoneActive, (int, int, char), 0x40C700);
FunctionPointer(int, fn_hIsTypeExistsInGeoObj, (int, int), 0x40C7C0);
FunctionPointer(int, CS_fn_hGetZdxList, (int, int), 0x40C9D0);
FunctionPointer(int, fn_vUpdateCurrentActivationForCharacter, (int a1), 0x40C9F0);
FunctionPointer(int, fn_uwGetIndexFromZdxIndexList, (int a1), 0x40CC60);
FunctionPointer(int, fn_hGetCollideZdxOfTypeAtIndex, (int, int, int), 0x40CC70);
FunctionPointer(int, fn_bThisZdeFromOneVsThisZdeFromTwo, (int, int, int, int, int, int), 0x40D390);
FunctionPointer(int, fn_bThisTypeFromOneVsThisTypeFromTwo, (int, int, int, int), 0x40D570);
FunctionPointer(int, fn_vGetAllObjectsInZdd, (int, char, int, int, int), 0x40DB00);
FunctionPointer(int, fn_hMakeOneObjectFromManyZdx, (int, int), 0x40DB90);
FunctionPointer(int, fn_eGetPrivilegedActivationZoneOfCharacter, (int, int, int), 0x40DE70);
FunctionPointer(int, fn_lGetZdxListNumberOfElements, (int, int), 0x40DED0);
FunctionPointer(int, GAM_fn_p_stGetMorphData, (int, int, int), 0x40DFB0);
FunctionPointer(int, PLA_fn_vStopCurrentMorphAnim, (int a1), 0x40E050);
FunctionPointer(void, PLA_fn_vDoFrame, (tdstAnim3d_* anim3d, __int16 currentFrame, HIE_tdstSuperObject* superObject), 0x40E0D0);
FunctionPointer(char, PLA_fn_vRefreshFrameNumber, (HIE_tdstSuperObject* so), 0x40E800);
FunctionPointer(char, _PLA_fn_bDoAnimPlayerForCharacter, (HIE_tdstSuperObject* characterStruct, char dontDoFrame, char a3), 0x40E9E0);
FunctionPointer(int, PLA_fn_vInitMatrixHeap, (), 0x40EF60);
FunctionPointer(int, PLA_fn_vCreateMatrixHeap, (), 0x40EF80);
FunctionPointer(int, _PLA_fn_vInitSupObjHeap, (), 0x40F090);
FunctionPointer(int, PLA_fn_vCreateSupObjHeap, (), 0x40F0E0);
FunctionPointer(int, PLA_fn_vCreateAndInitHeaps, (), 0x40F110);
FunctionPointer(int, PLA_fn_hFindNextFreeSupObj, (), 0x40F140);
FunctionPointer(tdstEngineObject*, PLA_fn_vReleaseSuperObjectInHeap, (tdstEngineObject* engineObject), 0x40F220);
FunctionPointer(int, PLA_vInitAllChildInHeapNewAnim, (HIE_tdstSuperObject* superObject, tdstAnim3d_* anim3d, unsigned __int16 frame), 0x40F2C0);
FunctionPointer(void, PLA_fn_vDesInitAllChildOfCharacter, (HIE_tdstSuperObject* superObject, tdstEngineObject* engineObject), 0x40F840);
FunctionPointer(int, PLA_fn_vRefreshGlobalMatrixUnderCharacter, (int a1), 0x40FA30);
FunctionPointer(int, PLA_fn_vRefreshGlobalMatrixOfAnimsHierarchy, (int a1), 0x40FA60);
FunctionPointer(char, PLA_fn_bSetNewState, (HIE_tdstSuperObject* characterStruct, tdstState_* state, char force, char a4, char setAnim), 0x40FAA0);
FunctionPointer(char, PLA_fn_bSetNewStateWithRandom, (HIE_tdstSuperObject* a1, int a2), 0x40FC50);
FunctionPointer(unsigned int, PLA_fn_vSetCurrFrame, (HIE_tdstSuperObject* superObject, __int16 a2), 0x40FD30);
FunctionPointer(signed int, PLA_fn_vInitNewState, (HIE_tdstSuperObject* superObject, tdstState_* state), 0x40FE70);
FunctionPointer(signed int, PLA_fn_bTestNewState, (HIE_tdstSuperObject* superObject, tdstState_* newState), 0x40FF10);
FunctionPointer(int*, PLA_fn_stGetLinearSpeedVector, (HIE_tdstSuperObject* a1, __int16 a2), 0x40FF90);
FunctionPointer(int, PLA_fn_stGetAngularSpeedMatrix, (int, int), 0x4100E0);
FunctionPointer(bool, _PLA_fn_bTestIfEndOfAction, (HIE_tdstSuperObject* a1), 0x410310);
FunctionPointer(bool, PLA_fn_bTestIfEndOfAnim, (HIE_tdstSuperObject* superObject), 0x410340);
FunctionPointer(int, _fn_bPlayerSaveGameAll, (), 0x410360);
FunctionPointer(int, fn_bLevelSaveGameAll, (), 0x4103A0);
FunctionPointer(int, SaveTheGame_1, (int a1), 0x410400);
FunctionPointer(int, fn_bPlayerSaveGameAll, (), 0x410410);
FunctionPointer(int, _fn_bLevelSaveGameAll, (), 0x410450);
FunctionPointer(int, getSomeSlotFolder, (), 0x410A80);
FunctionPointer(int, HasSaveFileAccess, (char* Format, char*), 0x410C50);
FunctionPointer(int, fn_vRemoveAllMicros, (), 0x411B80);
FunctionPointer(int, InitArrayOfDynamicFunction, (int a1), 0x412020);
FunctionPointer(struct_mechanicsIdCard*, fn_h_GetCurrentDNMIdCard, (HIE_tdstSuperObject* superObject), 0x412040);
FunctionPointer(void, __Z35fn_vTransferSpeedInformationPLA_DNMP20HIE_tdstSuperObject_s, (HIE_tdstSuperObject* so, __int16 a2), 0x412060);
FunctionPointer(char, fn_vMakeCharacterThink, (HIE_tdstSuperObject* object), 0x4120D0);
FunctionPointer(DNM_stDynamics*, fn_vMakeCharacterMechanicallyReact, (HIE_tdstSuperObject* a1), 0x412150);
FunctionPointer(DNM_stDynamics*, fn_vMakeCharacterReact, (HIE_tdstSuperObject* superObject), 0x412230);
FunctionPointer(char, __Z11fn_bIsInFixP17tdstEngineObject_, (tdstEngineObject* a1), 0x4123D0);
FunctionPointer(int, fn_vSectInfoInit, (int, int), 0x412410);
FunctionPointer(HIE_tdstSuperObject*, fn_vSectInfoDesinit, (OLDtdstEngineObject* engineObject, signed int a2), 0x4125D0);
FunctionPointer(int, fn_vSectInfoInitForSingleCharacter, (int, int), 0x412670);
FunctionPointer(int, _fn_vInsertObjectInSectorList, (HIE_tdstSuperObject* sector, HIE_tdstSuperObject* object), 0x412740);
FunctionPointer(int, _fn_vInsertLightInSectorList, (int, int), 0x4127A0);
FunctionPointer(int, fn_vRemoveObjectInSectorList, (int a1), 0x412810);
FunctionPointer(double, fn_vSectInfoLaunchEventsFromS1ToS2, (int, int), 0x412880);
FunctionPointer(double, _GAM_fn_vSectInfoTestChangeSectorForCharacter, (int a1), 0x4128D0);
FunctionPointer(int, _fn_ulDynamSizeOf, (), 0x412BD0);
FunctionPointer(int, _fn_vDynamFree, (int a1), 0x412E90);
FunctionPointer(int, fn_vDynamInit, (int, int), 0x412F20);
FunctionPointer(int, _fn_vDynamCopyClone, (int, int), 0x412FF0);
FunctionPointer(DNM_stDynamics*, fn_vDynamSetUsedMechanics, (DNM_stDynamics* retstr, DNM_stDynamics* usedMechanics, int a2), 0x413100);
FunctionPointer(int, _fn_vStdGameAlloc, (int a1), 0x413140);
FunctionPointer(int, _fn_vStdGameFree, (int a1), 0x413200);
FunctionPointer(char, _fn_vStdGameInit, (tdstEngineObject* engineObject, int superObjectType), 0x4132A0);
FunctionPointer(HIE_tdstSuperObject*, fn_h_StandardGameGetSuperObject, (tdstStandardGame_* standardGame), 0x4136D0);
FunctionPointer(HIE_tdstSuperObject*, fn_vStandardGameSetSuperObject, (tdstStandardGame_* standardGame, HIE_tdstSuperObject* superObject), 0x4136E0);
FunctionPointer(int, _fn_ulStandardGameGetCustomBitsSO, (HIE_tdstSuperObject* a1), 0x413700);
FunctionPointer(int, CAM_fn_vLoadCameraConstants, (), 0x4138B0);
FunctionPointer(int, _CAM_fn_ulCineinfoSizeOf, (), 0x413A10);
FunctionPointer(int, _CAM_fn_vCineinfoFree, (int a1), 0x413C20);
FunctionPointer(int, CAM_fn_vInitCompleteCineinfo, (int a1), 0x413DB0);
FunctionPointer(int, CAM_fn_vUpdateTargetPosition, (int cineInfo), 0x413E30);
FunctionPointer(int, _CAM_fn_vCineinfoInit, (OLDtdstEngineObject* engineObject, int a2), 0x413EE0);
FunctionPointer(int, _CAM_fn_vCineinfoDesinit, (int a1), 0x413FD0);
FunctionPointer(int, CAM_fn_vSetCineinfoCurrentFromVisibility, (int a1), 0x414100);
FunctionPointer(int, fn_vInitAveragePositionDatasIfNecessary, (int a1), 0x414300);
FunctionPointer(int, fn_ucGetLinkingTypeInTransition, (int a1), 0x415210);
FunctionPointer(int, fn_vLightAlloc, (int a1), 0x4159B0);
FunctionPointer(int, fn_h_LightRealAlloc, (), 0x415A30);
FunctionPointer(int, fn_vLightInit, (int, int), 0x415B10);
FunctionPointer(int, fn_vLightInitValueSAI, (int a1), 0x415CA0);
FunctionPointer(int, _fn_hMSLightGetLightNodeInSector, (int a1), 0x415FE0);
FunctionPointer(int, fn_ucMSLightGetOnOff, (int a1), 0x416020);
FunctionPointer(int, _fn_bMSLightGetOnlyLocalLight, (int a1), 0x416240);
FunctionPointer(double, fn_xComputeAngleOfPerso, (int a1), 0x416370);
FunctionPointer(void, fn_vUpdateLight, (HIE_tdstSuperObject* light), 0x416430);
FunctionPointer(int, fn_pCreateCone, (int, int, int, float), 0x416B10);
FunctionPointer(int, HIE_fn_hGetSuperObjectLight, (HIE_tdstSuperObject* a1), 0x416DB0);
FunctionPointer(int, CS_fn_hGetActivationList, (int, int), 0x4178C0);
FunctionPointer(int, fn_bCollSetGetCharacterNoCollisionWithOtherSectors, (int a1), 0x417960);
FunctionPointer(int, fn_bCollSetGetCharacterNoCollisionWithProjectile, (int a1), 0x417970);
FunctionPointer(int, fn_bCollSetGetCharacterNoCollisionWithSecondaryCharacter, (int a1), 0x417980);
FunctionPointer(int, fn_bCollSetGetCharacterNoCollisionWithMainCharacter, (int a1), 0x417990);
FunctionPointer(int, fn_StandardGameIsAPlatform, (HIE_tdstSuperObject* superObject), 0x417A80);
FunctionPointer(int, _fn_vDynamAlloc_0, (int a1), 0x417E10);
FunctionPointer(int, _fn_vBrainFree, (int a1), 0x417EA0);
FunctionPointer(int, _fn_vBrainInit, (int, int), 0x417F40);
FunctionPointer(int, _fn_vBrainDesinit, (int a1), 0x418060);
FunctionPointer(int, fn_v3dDataInit, (tdstSectInfo_* info0, int a2), 0x418340);
FunctionPointer(int, _fn_v3dDataDesinit, (int, int), 0x418600);
FunctionPointer(unsigned int, fn_v3dDataSetFrameRate, (tdst3dData_* a1, unsigned __int8 newFramerate), 0x418790);
FunctionPointer(int, fn_v3dDataUpdateBrainCounter, (int a1), 0x418880);
FunctionPointer(bool, fn_b3dDataCanComputeBrain, (HIE_tdstSuperObject* object), 0x4188C0);
FunctionPointer(int, fn_v_InitSinTab, (), 0x418AB0);
FunctionPointer(signed int, fn_v_ExpandQuat, (Quaternion* a1, int a2), 0x418B50);
FunctionPointer(Matrix*, fn_v_QuatToMatrix, (), 0x418F70);
FunctionPointer(Quaternion*, fn_v_QuatSlerp, (Quaternion* a1, Quaternion* a2, int a3, float factor, __int16 a5), 0x4190E0);
FunctionPointer(st_A3dGENERAL*, fn_p_GetA3dGENERALForTransitions, (unsigned __int16 offset), 0x4192E0);
FunctionPointer(int, AllocateSNAPartMemory_3, (SIZE_T dwBytes), 0x419300);
FunctionPointer(int, GLI_lGetLightType, (int a1), 0x4194B0);
FunctionPointer(char*, AllocMem, (int addr, int a2), 0x4194D0);
FunctionPointer(tdstState_*, fn_hGetNextStateInState, (tdstState_* state, tdstState_* state2), 0x419970);
FunctionPointer(char, fn_scGetSpeedInState, (tdstState_* state), 0x419980);
FunctionPointer(int, fn_hGetStateMechanicsIdCard, (tdstState_* a1), 0x419990);
FunctionPointer(uint32_t*, fn_hIfExistTransitionalWithTargetState, (tdstState_* currentState, tdstState_* targetState), 0x4199B0);
FunctionPointer(int, fn_hIfExistProhibitedState, (int, int), 0x4199F0);
FunctionPointer(int, fn_vDisplayFix, (), 0x419A30);
FunctionPointer(int, GetFirstReferencedValue, (int object), 0x419B90);
FunctionPointer(int, _fn_bGetIfCharacterIsInAlwaysActiveCharacterList, (int a1), 0x419BA0);
FunctionPointer(void, fn_v_InterpolBetweenKeys, (tdstKeyFrame_* from, tdstKeyFrame_* to, tdstChannel_* a3, Matrix* _matrix, __int16 a5, float factor), 0x419BD0);
FunctionPointer(tdstAnim3d_*, _fn_vUpdateFrameForSubAnim, (HIE_tdstSuperObject* so, tdstFrame3d* frame3d, tdstAnim3d_* anim3d, unsigned __int16 frame), 0x41A400);
FunctionPointer(char, fn_vUpdateFrameMatrix, (HIE_tdstSuperObject* so, tdstFrame3d* frame3d, tdstAnim3d_* anim3d, unsigned __int16 currentFrame, char a5, int animObjectsDataArray), 0x41A610);
FunctionPointer(int, fn_p_stGetLinearSpeedVector, (tdstAnim3d_* anim3d, unsigned __int16 a2), 0x41A830);
FunctionPointer(int, fn_p_stGetAngularSpeedMatrix, (int, int, int), 0x41A8A0);
FunctionPointer(char, fn_vInitAllEvents, (HIE_tdstSuperObject* superObject, unsigned __int16 a2), 0x41A930);
FunctionPointer(int, GEO_fn_vAddObjectToSphere, (int, int, int), 0x41BA30);
FunctionPointer(int, GEO_xInitGEOError, (), 0x41BBE0);
FunctionPointer(int, AllocateSNAPartMemory_2, (int, SIZE_T dwBytes), 0x41BC20);
FunctionPointer(int, GEO_xSelectMemoryChannel, (int a1), 0x41BC60);
FunctionPointer(int, FreeSNAPartMemory_2, (LPVOID ptr), 0x41BCB0);
FunctionPointer(int, GEO_xComputeObjectNormals, (int a1), 0x41BDD0);
FunctionPointer(int, GEO_xComputeIndexUsedByElements, (int a1), 0x41C410);
FunctionPointer(int, GEO_vCreateGeometricObject, (int, int, int), 0x41CD30);
FunctionPointer(int, GEO_vSetPointOfObject, (int, int, __int16), 0x41CDA0);
FunctionPointer(int, GEO_vGetPointOfObject, (int, int, __int16), 0x41CDD0);
FunctionPointer(int, GEO_vEndModifyObject, (int a1), 0x41D1A0);
FunctionPointer(int, GEO_vGetNormalOfGeometricObjectElement, (int, __int16, __int16, int), 0x41D240);
FunctionPointer(int, GEO_vCreateObjectListOfParallelBox, (int, __int16), 0x41D830);
FunctionPointer(int, GEO_vComputeObjectListOfParallelBox, (int a1), 0x41D9D0);
FunctionPointer(int, GEO_vGetMaterialOfIndexedTriangles, (int, __int16, int), 0x41E310);
FunctionPointer(int, GEO_vCreateElementCones, (int, int, int), 0x41EA70);
FunctionPointer(int, GEO_vSetPointsOfIndexedCone, (int, __int16, __int16, __int16, __int16), 0x41ECE0);
FunctionPointer(int, GEO_vSetRadiusOfIndexedCone, (int, __int16, __int16, float), 0x41ED70);
FunctionPointer(int, _GEO_vSetZFar, (int a1), 0x41EE30);
FunctionPointer(int, _GEO_vSetZFarTransparencyZone, (float), 0x41EE50);
FunctionPointer(int, GEO_fn_vComputeCameraParametersForCulling, (int, int), 0x41F120);
FunctionPointer(int, GLD_pGetViewport, (__int16, __int16), 0x420430);
FunctionPointer(int, GLD_pGetDevice, (__int16), 0x420450);
FunctionPointer(int, GLD_bClearViewportWithChoice, (int, int, __int16), 0x4204B0);
FunctionPointer(int, GLD_bGetDeviceAttributes, (int, int), 0x420890);
FunctionPointer(int, GLD_bGetViewportAttributes, (int, __int16, int), 0x420A80);
FunctionPointer(int, j_GLI_DRV_bBeginScene, (uint32_t), 0x420B00);
FunctionPointer(int, j_GLI_DRV_bEndScene, (uint32_t), 0x420B10);
FunctionPointer(int, GLD_BRequestWriteToViewport, (int, __int16, int, int), 0x420B20);
FunctionPointer(int, GLD_bWriteToViewportFinished, (int, __int16), 0x420BB0);
FunctionPointer(int, GLD_vSetFrameSynchro, (char* Str1, char* Str, int), 0x420D20);
FunctionPointer(int, SwapSceneBuffer, (), 0x420F50);
FunctionPointer(int, PrepareFullScreen, (int, int), 0x421390);
FunctionPointer(int, GLD_bSetBackgroundColorForDevice, (int, int), 0x421620);
FunctionPointer(int, InitDisplay_ActualInit, (), 0x421670);
FunctionPointer(int, GLI_vCloseGli, (), 0x421800);
FunctionPointer(int, IsGliInitialized, (), 0x421810);
FunctionPointer(int, ReadPTX_wrapper, (), 0x421820);
FunctionPointer(int, GLI_vSignalCurrentMemoryChannel, (int a1), 0x421860);
FunctionPointer(int, LoadGLILibrary, (), 0x421880);
FunctionPointer(void, ReadConfig_GliDLLFile, (const char* name), 0x421E60);
FunctionPointer(void, ReadConfig_GliDLL, (const char* name), 0x421E80);
FunctionPointer(int, GLI_xClearViewingList, (), 0x421F90);
FunctionPointer(int, GLI_ClearZBufferRegion, (uint32_t, uint32_t, uint32_t, uint32_t), 0x421FB0);
FunctionPointer(int, GLI_vWrite16BitmapToBackBuffer, (int a1, int width, int height, int a4, int a5, int a6, int a7), 0x421FD0);
FunctionPointer(int, j_GLI_DRV_vOptimizedWindowedMode, (void), 0x422030);
FunctionPointer(int, j_GLI_DRV_vNonOptimizedWindowedMode, (void), 0x422040);
FunctionPointer(int, GetFullscreen, (), 0x422060);
FunctionPointer(int, GetWidth, (), 0x422070);
FunctionPointer(int, GetHeight, (), 0x422080);
FunctionPointer(int, GetBits, (), 0x422090);
FunctionPointer(bool, AddDisplayMode, (bool fullscreen, int width, int height, int depth), 0x4220A0);
FunctionPointer(int, GLI_fn_lRequestNewDisplayMode, (int a1), 0x4222C0);
FunctionPointer(int, InitDisplay, (), 0x422460);
FunctionPointer(int, GLI_vCopyCamera, (int, int), 0x4225D0);
FunctionPointer(int, GLI_xGetCameraMatrix, (int, int), 0x422620);
FunctionPointer(int, GLI_xSetCameraMatrix, (int, int), 0x422640);
FunctionPointer(int, SetAspectRatio_unsure, (int, float, int), 0x422660);
FunctionPointer(int, GLI_xSetViewportCamera, (int, int, int), 0x4226D0);
FunctionPointer(int, GLI_xGetViewportCamera, (int, int, int), 0x422720);
FunctionPointer(int, GLI_vAdjustCameraToMirror, (int, int, int, int, int, int), 0x423050);
FunctionPointer(signed int, TEX_SetNameOfBinaryFile, (char* filename), 0x423610);
FunctionPointer(int, ReadPTX, (), 0x423640);
FunctionPointer(int, GLI_xAdjustCameraToViewport2, (int, int, int), 0x423990);
FunctionPointer(int, GLI_vSetWaterplaneOff, (), 0x4239D0);
FunctionPointer(int, _GLI_vInitWaterplaneModule, (), 0x423AB0);
FunctionPointer(int, GLI_vSetFog2, (float, float, float, float, float, int), 0x424010);
FunctionPointer(int, GLI_vFogOn, (), 0x424180);
FunctionPointer(int, GLI_vFogOff, (), 0x424190);
FunctionPointer(int, GLI_fn_vDisplayMenuBackground, (int a1), 0x424440);
FunctionPointer(int, GLI_xSetMaterialAmbientCoef, (int, int), 0x424860);
FunctionPointer(int, GLI_xSetMaterialColor, (int, int), 0x4248C0);
FunctionPointer(int, GLI_xSetMaterialDiffuseCoef, (int, int), 0x424920);
FunctionPointer(int, GLI_xSetMaterialSpecularCoef, (int, int, int), 0x424980);
FunctionPointer(int, RefreshAnimatedTexture, (int a1), 0x424C00);
FunctionPointer(int, getFontTexture, (int a1), 0x424E90);
FunctionPointer(int, GLI_TEX_vSignalCurrentMemoryChannel, (int a1), 0x424FE0);
FunctionPointer(void, LoadModelWithTexture, (GliTexture* model, const char* textureName, void* a3), 0x426050);
FunctionPointer(void, LoadTextureInTexelField, (GliTexture* model_, void* Dst, int a4), 0x426550);
FunctionPointer(int, FIL_fn_vFreeGlobalHandleToFileInConcatFile, (), 0x4269E0);
FunctionPointer(int, gl_PushLightsToLightsArray, (int, int), 0x426B80);
FunctionPointer(int, GLI_vClearListOfLightInViewport, (), 0x426BC0);
FunctionPointer(int, gl_maybeRemoveLightFromLightsArray, (char), 0x426BD0);
FunctionPointer(int, GLI_vStoreLightForInit, (int, int), 0x426DA0);
FunctionPointer(int, GLI_xGetLightState, (int, int), 0x426F50);
FunctionPointer(int, GLI_xGetLightColor, (int, int), 0x426F90);
FunctionPointer(double, GLI_fn_xFogGetFar, (int a1), 0x4270E0);
FunctionPointer(double, GLI_fn_xFogGetBlendNear, (int a1), 0x4270F0);
FunctionPointer(double, GLI_fn_xFogGetInfinite, (int a1), 0x427100);
FunctionPointer(double, GLI_fn_xFogGetBlendFar, (int a1), 0x427110);
FunctionPointer(int, GLI_vSetLensFlareRef, (int a1), 0x428DD0);
FunctionPointer(int, DrawSprite, (struct_rendercontext* context, float x, float y, float u, float v, int texture), 0x429670);
FunctionPointer(int, fn_bDisplaySky, (int, int, int), 0x429F70);
FunctionPointer(int, GLI_fn_vDrawMirror, (float), 0x42A300);
FunctionPointer(int, GLI_vDoMaterialSelection, (uint32_t), 0x42A410);
FunctionPointer(int, GLI_xSetRLIForNextObjectToDraw, (int a1), 0x42A980);
FunctionPointer(int, _GLI_xSendObjectElement, (GLI_BIG_GLOBALS* gli_big_globals), 0x42A990);
FunctionPointer(int, DrawTriangles, (GLI_BIG_GLOBALS* gli_big_globals, __int16 a2), 0x42AA30);
FunctionPointer(void, _GLI_xSendObjectToViewportWithLights, (int a1, int mdl, int someShit), 0x42AAE0);
FunctionPointer(void, GLI_lSendVisualSetToViewportWithRLI2, (int snaPointer, int model, int modelEndPointer, int a4, void* radiosity), 0x42AF70);
FunctionPointer(int, AddDefinedPixelFormat, (int a1), 0x42B710);
FunctionPointer(int, getOptionalTextureFolder, (), 0x42D1B0);
FunctionPointer(int, GLI_vSerialComputeVertexColorIndexedNoAlpha, (int, int, int), 0x42D520);
FunctionPointer(int, fn_vDynamSetDynamics, (tdstDynam_* a1, int a2), 0x42DB20);
FunctionPointer(void, _GEO_fn_vDestroyMatrix, (Matrix* mat), 0x42DD10);
FunctionPointer(int, GetField4, (int a1), 0x42DE30);
FunctionPointer(int, IPT_fn_vFirstInitInput, (), 0x42DE50);
FunctionPointer(int, AllocateSNAPartMemory_1, (SIZE_T dwBytes), 0x42DE80);
FunctionPointer(int, IPT_fn_vDesinitInputWhenLoadSnapshot, (), 0x42E010);
FunctionPointer(int, IPT_fn_vResetInputEntry, (), 0x42E090);
FunctionPointer(int, IPT_fn_vActivateAllEntryElements, (), 0x42E120);
FunctionPointer(int, IPT_fn_vActivateEntryElement, (int a1), 0x42E180);
FunctionPointer(int, IPT_fn_bAKeyJustPressed, (), 0x42E600);
FunctionPointer(int, IPT_fn_bAButtonPadJustPressed, (), 0x42E690);
FunctionPointer(int, IPT_fn_vReadInput, (), 0x42E710);
FunctionPointer(int, IPT_fn_bIsJustValidated, (int a1), 0x42E850);
FunctionPointer(bool, IPT_fn_bIsValidated, (IPT_tdstEntryElement* a1), 0x42E870);
FunctionPointer(bool, IPT_fn_bIsInvalidated, (IPT_tdstEntryElement* a1), 0x42E8B0);
FunctionPointer(char, IPT_p_fn_bIsKeyWordValid_Start, (IPT_tdstEntryElement* a1), 0x42EAC0);
FunctionPointer(char, IPT_p_fn_bIsKeyWordValid_Table, (IPT_tdstEntryElement* a1), 0x42EAF0);
FunctionPointer(bool, IPT_fn_bIsKeyWordValid_And, (IPT_tdstEntryElement* a1), 0x42EB50);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_Or, (int a1), 0x42EBA0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_Not, (int a1), 0x42EBF0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_KeyJustPressed, (int a1), 0x42EC10);
FunctionPointer(char, IPT_fn_bIsKeyWordValid_KeyJustReleased, (struct_a1_9* a1), 0x42EC80);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_KeyPressed, (int a1), 0x42ECE0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_KeyReleased, (int a1), 0x42ED50);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_PadJustPressed_WRONG, (int a1), 0x42EDB0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_PadJustReleased_WRONG, (int a1), 0x42EEB0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_PadPressed_WRONG, (int a1), 0x42EFE0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_PadReleased_WRONG, (int a1), 0x42F120);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickAxeValue_WRONG, (int a1), 0x42F270);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickJustPressed_WRONG, (int a1), 0x42F390);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickJustReleased_WRONG, (int a1), 0x42F590);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickPressed, (int a1), 0x42F750);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickReleased_WRONG, (int a1), 0x42F9A0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickOrPadJustPressed_WRONG, (int a1), 0x42FA60);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickOrPadJustReleased_WRONG, (int a1), 0x42FB00);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickOrPadPressed_WRONG, (int a1), 0x42FBB0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_JoystickOrPadReleased_WRONG, (int a1), 0x42FC40);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_ActionJustValidated, (int a1), 0x430130);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_ActionValidated, (int a1), 0x430160);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_ActionJustInvalidated, (int a1), 0x430190);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_ActionInvalidated, (int a1), 0x4301C0);
FunctionPointer(char, IPT_fn_bIsKeyWordValid_SequenceKey, (IPT_tdstEntryElement* a1), 0x430240);
FunctionPointer(char, IPT_fn_bIsKeyWordValid_SequenceKeyEnd, (IPT_tdstEntryElement* a1), 0x4302C0);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_SequencePad, (int a1), 0x430340);
FunctionPointer(int, IPT_fn_bIsKeyWordValid_SequencePadEnd, (int a1), 0x4303D0);
FunctionPointer(int, IPT_fn_ActualizeHistoric, (), 0x430880);
FunctionPointer(int, _ISI_fn_vFreeISI, (int a1), 0x4311B0);
FunctionPointer(void, _MEC_fn_vBaseManager, (DNM_stDynamics* a1, int a2, int a3), 0x431960);
FunctionPointer(void, MEC_fn_vWalkManager, (DNM_stDynamics* dynamics, HIE_tdstSuperObject* superObject, int a3), 0x431A10);
FunctionPointer(int*, _MEC_p_stDynamicsBaseMechanics, (DNM_stDynamics* actorDynamics, HIE_tdstSuperObject* superObject_, int a3, int a4, float a5), 0x431AD0);
FunctionPointer(void, MEC_vImposeRotationMatrix, (DNM_stDynamics* dynamic, int rotationMatrix), 0x4329B0);
FunctionPointer(int, MEC_vImposeRotationVector, (int, int, int, int), 0x432A90);
FunctionPointer(int, MEC_vImposeRelativeRotation, (int, int), 0x432B10);
FunctionPointer(int, MEC_vInitTranslation, (int, int, int), 0x432DA0);
FunctionPointer(int, MEC_fn_ImposeActorMatrix, (HIE_tdstSuperObject* superObject), 0x432E60);
FunctionPointer(void, MEC_vTurnAroundZAxis, (DNM_stDynamics* mech, float angle), 0x432EE0);
FunctionPointer(int, DNM_fn_vSetHangingLimit, (DNM_stDynamics* a1, float newLimit), 0x4331D0);
FunctionPointer(int, CAM_lHaveITakeSThgIntoTheMug, (int, HIE_tdstSuperObject* a2, int matrix, int a4), 0x434390);
FunctionPointer(int, DNM_p_stObstacleCameraObstacle, (int, int, int, int, int, int), 0x434660);
FunctionPointer(int, CAM_fn_vComputeCameraSystemAxis, (int, int, int, int, int, int, int), 0x435640);
FunctionPointer(int, DNM_fn_vDynamicsInitDefault, (int a1), 0x435AC0);
FunctionPointer(int, DNM_fn_vInitBaseMechanic, (int a1), 0x435B70);
FunctionPointer(DNM_stDynamics*, DNM_fn_vInitDynamic, (DNM_stDynamics* dynamic, struct_mechanicsIdCard* card), 0x435B80);
FunctionPointer(DNM_stDynamics*, DNM_fn_vChangeIdCard, (DNM_stDynamics* dynamic, struct_mechanicsIdCard* idCard), 0x435DF0);
FunctionPointer(bool, IsNotNull, (int val), 0x435E90);
FunctionPointer(int, MEC_fn_bWallNormal, (int, int), 0x435EA0);
FunctionPointer(int, MEC_fn_bGroundNormal, (int, int), 0x435EF0);
FunctionPointer(int, MEC_fn_bCeilObstacle, (int, int), 0x435F10);
FunctionPointer(int, MEC_fn_bCanCrashActor, (int a1), 0x435F50);
FunctionPointer(double, MEC_fn_xGetRebound, (DNM_stDynamics* dynamics, DNM_stMecObstacle* obstacle), 0x4360B0);
FunctionPointer(double, MEC_fn_xGetSlide, (DNM_stDynamics* dynamics, DNM_stMecObstacle* obstacle), 0x436130);
FunctionPointer(int, _MEC_fn_vComputeCollisionTranslation, (int, int, int), 0x4361B0);
FunctionPointer(int, MEC_fn_vDeleteWallEdge, (int, int, int), 0x4362E0);
FunctionPointer(int, MEC_fn_vDeleteUnderGroundWall, (int, int, int, int), 0x4364A0);
FunctionPointer(int, _MEC_fn_pSelectGround, (int, int, int, int, int), 0x436610);
FunctionPointer(int, MEC_fn_bDetectStep, (int, int, int, int, int), 0x436820);
FunctionPointer(int, _MAT_fn_bAreEquivalent, (int, int), 0x436B80);
FunctionPointer(float*, MEC_fn_vTranslateMatrixOn, (DNM_stDynamics* a1, Vector3* position), 0x436DA0);
FunctionPointer(int, MEC_fn_vDeleteOnGroundBackFace, (int, int, int, int, int), 0x437140);
FunctionPointer(int, MEC_fn_vDeleteBaseBackFace, (int counter, DNM_stMecObstacle* obstacle, DNM_stDynamics* dynamics), 0x437520);
FunctionPointer(int, MEC_fn_vDeleteNoCollidedGroundFace, (int, int, int), 0x437780);
FunctionPointer(void, MEC_fn_vDeleteHangingObstacle, (__int64 f0_counter, DNM_stMecObstacle* obstacle, int a3), 0x4377F0);
FunctionPointer(int, MEC_fn_vDeleteNullTranslationObstacle, (int, int), 0x437970);
FunctionPointer(HIE_tdstSuperObject*, MEC_fn_hGetFatherActor, (HIE_tdstSuperObject* so), 0x437A20);
FunctionPointer(double*, translateMatrix, (DNM_stDynamics* matrix, Vector3* vector2), 0x437A40);
FunctionPointer(int, MEC_fn_bMainActor, (int a1), 0x437B90);
FunctionPointer(void, MEC_fn_vCollideBaseMechanic, (DNM_stDynamics* dynamics, HIE_tdstSuperObject* superObject, DNM_stDynamics* a3, int a4, int a5), 0x437E60);
FunctionPointer(int, MEC_fn_vWallObstacleManagement, (DNM_stDynamics* a1, int a2, int a3, int a4, int a5, int a6, char a7), 0x4390D0);
FunctionPointer(void, _MEC_fn_vBaseObstacleManagement, (DNM_stDynamics* dynamics, HIE_tdstSuperObject* superObject, int a3), 0x439660);
FunctionPointer(void, MEC_fn_vGiObstacleManagement, (DNM_stDynamics* actorDynamics, HIE_tdstSuperObject* superObject, int a3), 0x439730);
FunctionPointer(int, _MEC_fn_vClimbObstacleManagement, (int, int, float), 0x43A260);
FunctionPointer(void, MEC_fn_vGroundObstacleManagement, (DNM_stDynamics* dynamics, HIE_tdstSuperObject* superObject, int a3), 0x43B360);
FunctionPointer(int, MEC_fn_vSpiderObstacleManagement, (int, int, float), 0x43D440);
FunctionPointer(void, MEC_fn_vUpdatePlatform, (int dynamics, HIE_tdstSuperObject* superObject, int a3, int a4), 0x43D7B0);
FunctionPointer(int, MEC_fn_vCancelTilt, (int a1), 0x43E250);
FunctionPointer(char, MEC_fn_bCollision, (DNM_stDynamics* a_dynamicsA, DNM_stMecObstacle* mecObstacle, DNM_stDynamics* a_dynamicsB, HIE_tdstSuperObject_Sector* superObject, int someMatrixPtr, int someOtherMatrixPtr, int checkBackFaces), 0x43EEC0);
FunctionPointer(HIE_tdstSuperObject*, MEC_fn_vReportCollideActor, (HIE_tdstSuperObject* superObject, DNM_stMecObstacle* obstacle), 0x43F470);
FunctionPointer(char, MEC_fn_vReportCollision, (DNM_stDynamics* a_dynamics, HIE_tdstSuperObject* a_superObject, int a_counter, DNM_stMecObstacle* a_obstacle, int a_threshold), 0x43F510);
FunctionPointer(DNM_stDynamics*, MEC_fn_vFillCollisionReport, (DNM_stDynamics* dynamics), 0x43F940);
FunctionPointer(int, MEC_fn_vComputeAdjustVector, (int, int, int, int, int), 0x43FA40);
FunctionPointer(void, MEC_fn_vEdgeAnalysis, (DNM_stDynamics* a1, DNM_stDynamics* a2, int a3, int a4), 0x43FF20);
FunctionPointer(int, MEC_fn_vCrashAnalysis, (int, int, int), 0x4405D0);
FunctionPointer(int, MTH_fn_vVectorPlaneProjection, (int, int, int, int), 0x4406B0);
FunctionPointer(int, MGT_fn_vLastDesInitMagnet, (), 0x440AE0);
FunctionPointer(int, MGT_fn_vTreatMagnets, (), 0x440D80);
FunctionPointer(int, MGT_fn_vInitTreatement, (), 0x441010);
FunctionPointer(int, AllocateMem, (int, int, int, SIZE_T dwBytes, int, int, char), 0x442420);
StdcallFunctionPointer(void, FreeMemory, (LPVOID ptr), 0x442650);
FunctionPointer(int, fn_vDynFree, (int a1), 0x442740);
FunctionPointer(int, fn_p_vDynRealloc, (int, int, int), 0x442770);
FunctionPointer(int, fn_vStaFree, (int, int), 0x442A70);
FunctionPointer(int, fn_p_vStaRealloc, (int, int, int), 0x442B60);
FunctionPointer(int, fn_vGenFree, (int, int), 0x443160);
FunctionPointer(int, fn_p_vGenRealloc, (int, int, int), 0x4431A0);
FunctionPointer(int, NotUsed_1, (int, int, int), 0x4431E0);
FunctionPointer(int, NotUsed_GetPartDataPointer, (__int16 partId), 0x443280);
FunctionPointer(int, Mmg_fn_ucGiveChannelId, (int, char), 0x4432B0);
FunctionPointer(int, Mmg_fn_vReleaseChannelId, (int a1), 0x443340);
FunctionPointer(int, Mmg_fn_v_SetModeAlloc, (unsigned __int8 partId, unsigned __int8 a2, unsigned __int8 a3), 0x443360);
FunctionPointer(int, AllocateSNAPartMemory_9, (int a1), 0x4433C0);
FunctionPointer(int, Mmg_fn_v_InitMmg, (int, int), 0x443490);
FunctionPointer(int, FreeSNAPartMemory, (LPVOID ptr), 0x4434E0);
FunctionPointer(int, _Mmg_fn_vGiveInformationBlock, (unsigned __int8 partId, unsigned __int8 a2, int* part), 0x443560);
FunctionPointer(int*, Mmg_fn_vSaveInformationBlock, (unsigned __int8 partId, unsigned __int8 alwaysZero, int* pointerToPartDataPointer), 0x4435A0);
FunctionPointer(int, GEO_fn_vMorphAddInMainLoop, (), 0x443D80);
FunctionPointer(int, fn_vLastDeinitMorphTaskList, (), 0x443EF0);
FunctionPointer(int, POS_fn_vSetIdentityMatrix, (int a1), 0x4447E0);
FunctionPointer(int, POS_fn_vMulMatrixVertex, (int, int, int), 0x444800);
FunctionPointer(int, POS_fn_vMulMatrixVector, (int, int, int), 0x4449A0);
FunctionPointer(int, MAT_fn_vRotateVector, (int, int, int), 0x444AC0);
FunctionPointer(void, MAT_fn_vInvertRotation, (Matrix* a1, int a2), 0x444B80);
FunctionPointer(int, MAT_fn_vInvert, (int, int), 0x444D60);
FunctionPointer(int, MAT_fn_vNormalize, (int a1), 0x444F90);
FunctionPointer(int, MAT_fn_vCompose, (int, int, int), 0x445130);
FunctionPointer(Matrix*, POS_fn_vSetRotationMatrix, (Matrix* matrix, Vector3* rotX, Vector3* rotY, Vector3* rotZ), 0x445D00);
FunctionPointer(void, _POS_fn_vGetRotationMatrix, (Matrix* a1, Vector3* rotX, Vector3* rotY, Vector3* rotZ), 0x445F20);
FunctionPointer(float, MAT_fn_vGetScale, (Matrix* matrix, Vector3* scaleX, Vector3* scaleY, Vector3* scaleZ), 0x4462A0);
FunctionPointer(Matrix*, setMatrixPosition, (Matrix* m1, Vector3* m2), 0x446590);
FunctionPointer(int, POS_fn_GetTranslationVector, (int matrix, Vector3* vector), 0x4465C0);
StdcallFunctionPointer(int, CloseFile_01, (HANDLE hObject), 0x448500);
FunctionPointer(int, ReadInt32_OpenFile1_ParseDSB, (), 0x449080);
FunctionPointer(int, RND_fn_vFirstInitRandom, (), 0x449A50);
FunctionPointer(int, RND_fn_vComputeRandomTable, (), 0x449AE0);
FunctionPointer(int, RND_fn_vRemapRandomTable, (), 0x449B40);
FunctionPointer(int, RND_fn_ulGetUnsignedLongRandomValue, (int, int, int), 0x449C10);
FunctionPointer(int, SAI_fn_bInsertMTHRealInTable, (int, int), 0x449D60);
FunctionPointer(int, SAI_fn_p_vGetTableValuePointerOf, (int, int), 0x449DC0);
FunctionPointer(char, SAI_fn_bInitAllWhen, (int when), 0x449E80);
FunctionPointer(int, SaveTheGame_2, (int a1), 0x449EC0);
FunctionPointer(char, wrong_SaveTheGame_1, (const char* dest), 0x449EE0);
FunctionPointer(int, SAI_fn_vFirstInit, (), 0x449F00);
FunctionPointer(int, AllocateSNAPartMemory_8, (SIZE_T dwBytes), 0x449F40);
FunctionPointer(int, AllocateSNAPartMemory_7, (SIZE_T dwBytes), 0x449F70);
FunctionPointer(int, FreeSNAMemory_0, (), 0x449FA0);
FunctionPointer(int, SAI_fn_vSAIUseFixMemory, (), 0x449FE0);
FunctionPointer(int, SAI_fn_vSAIUseLevelMemory, (), 0x449FF0);
FunctionPointer(char, SAI_fn_bRestoreAnElementFromList, (struct_SAIlist* list), 0x44A500);
FunctionPointer(char, SAI_fn_bInitAllTableWhen, (uint32_t a2, int when), 0x44A600);
FunctionPointer(char, SaveTheGame_3, (signed int* numPointer, const char* a2, int a3), 0x44A650);
FunctionPointer(int, SaveTheGame_4, (int Str, FILE* File), 0x44A730);
FunctionPointer(char, readSomethingFromSaveFile, (int internalStructureThing, FILE* File), 0x44AAF0);
FunctionPointer(char, wrong_SaveTheGame_2, (int* internalStructureThing, const char* saveFile, int a3), 0x44AC10);
FunctionPointer(int, initSaving, (), 0x44AD70);
FunctionPointer(int, SECT_fn_vSendDynamicLightsOfASector, (int, int), 0x44ADC0);
FunctionPointer(int, SECT_fn_vSendDynamicLightsFromWhereIAmToViewport, (int, int), 0x44ADF0);
FunctionPointer(int, SECT_fn_vSendFogToViewport_0, (int, int), 0x44AE80);
FunctionPointer(int, SCT_fn_lSendSectorToViewportStatic, (int a1, int a2, HIE_tdstSuperObject* sector, int a4), 0x44AF30);
FunctionPointer(void, SCT_fn_vSendSectorWhereIAmToViewport_0, (int a1, int camera, HIE_tdstSuperObject* a3, int a4), 0x44B2E0);
FunctionPointer(int, SCT_fn_vGetSymMatrixOfCameraInMirror, (int, int, int, int, int), 0x44B410);
FunctionPointer(int, SCT_fn_vFindAllMirrorsInVisibleSector, (int, float, int, int, int, int), 0x44B610);
FunctionPointer(void, SCT_fn_vSendSectorWhereIAmToViewportWithMirror, (int a1, int a2, __int16 a3, int a4, HIE_tdstSuperObject* so_, int a6), 0x44B740);
FunctionPointer(int, _SECT_fn_vIsolateCharListNode, (HIE_tdstSuperObject_Sector* a1), 0x44C070);
FunctionPointer(int, _SECT_fn_vAddTailCharListNode, (int, int), 0x44C0D0);
FunctionPointer(HIE_tdstSuperObject*, _SECT_fn_vAddHeadCharListNode, (HIE_tdstSuperObject* a1, uint32_t a2), 0x44C170);
FunctionPointer(int, _SECT_fn_vAddTailDNMLightsListNode, (int, int), 0x44C210);
FunctionPointer(int, SECT_fn_bIsThisSectorVirtual, (int a1), 0x44C2C0);
FunctionPointer(int, SECT_fn_p_stGetMinPointInBorder, (tdstSectInfo_* a1), 0x44C2F0);
FunctionPointer(int, SECT_fn_p_stGetMaxPointInBorder, (tdstSectInfo_* a1), 0x44C300);
FunctionPointer(int, _SHW_fn_vInitShadowCounter_maybe, (), 0x44C440);
FunctionPointer(void, SHW_fn_vDrawShadow_0, (int a1, int a2, Sector* sector, int a4), 0x44C570);
FunctionPointer(char, SNA_fn_xReadOpenGlobalPointersFile, (LPCSTR fileName), 0x44CD60);
FunctionPointer(int, SNA_fn_vCloseGlobalPointersFile, (), 0x44CEC0);
FunctionPointer(int, PreparePTXRelocationTable, (), 0x44CF10);
FunctionPointer(bool, SNA_fn_vReadBlockInGlobalPointersFile, (LPVOID bufferToWriteTo, DWORD NumberOfBytesRead), 0x44CFA0);
StdcallFunctionPointer(int, SNA_fn_vReadPointerFromGlobalPointerFile__, (), 0x44CFC0);
FunctionPointer(int, SNA_fn_vReadStructureFromGlobalPointersFile, (LPVOID lpBuffer, DWORD Buffer), 0x44D0B0);
FunctionPointer(int, SNA_fn_vReadArrayWithoutPointerFromGlobalPointersFile, (LPVOID lpBuffer, int, int Buffer), 0x44D190);
FunctionPointer(int, SNA_fn_xReadOpenSoundTableFile, (char* Filename), 0x44D1E0);
FunctionPointer(int, SNA_fn_vReadAndUpdateSoundPointers, (), 0x44D2F0);
FunctionPointer(int, SNA_fn_vSortAnArray, (int, int), 0x44D3A0);
FunctionPointer(int, SNA_fn_vSetSaveLoadFix, (), 0x44D410);
FunctionPointer(int, SNA_fn_vSetSaveLoadLevel, (), 0x44D420);
FunctionPointer(int, SNA_fn_bLoadThisModuleBloc, (char, char), 0x44D430);
FunctionPointer(int, SNA_fn_vInitArrays, (), 0x44D4A0);
FunctionPointer(bool, SNA_fn_ReadAllMemoryBlocks, (char* filename), 0x44D4F0);
FunctionPointer(char, SNA_fn_bGetHandleToRelocationTable_wrapper, (struct_fixFileObject h), 0x44D990);
FunctionPointer(char, GetRelocationTableIdFromLevelName, (const char* levelname), 0x44DBE0);
FunctionPointer(int, SNA_fn_pLoadRelocationTable, (), 0x44DC40);
FunctionPointer(void, _SNA_fn_pFreeRelocationTable_unsure, (int someSNAVarCopy), 0x44DDE0);
FunctionPointer(int, SNA_fn_vInitBigFile, (), 0x44DE60);
StdcallFunctionPointer(int, ReadFile_0, (HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped), 0x44E750);
FunctionPointer(int, SNA_fn_bGetHandleToRelocationTableInBigFile, (struct_fileHandle* fileHandle), 0x44E8A0);
FunctionPointer(HANDLE, SNA_fn_hGetOffSetInBigFileWithSinusHeader, (int dataOffsetPointer), 0x44EB40);
FunctionPointer(int, SNA_fn_vSetLoadType, (char), 0x44F4D0);
FunctionPointer(int, _SNA_fn_ucGetLoadType, (), 0x44F4E0);
FunctionPointer(int, SNA_fn_ucGetLoadDscType, (), 0x44F4F0);
FunctionPointer(int, SNA_fn_vOpenDscFile, (int, int), 0x44F530);
FunctionPointer(int, SNA_fn_vOpenDscFileForReading, (DWORD NumberOfBytesRead), 0x44F870);
FunctionPointer(int, SNA_fn_vReadLongFromFile, (const void* buffer), 0x44F8B0);
ThiscallFunctionPointer(void*, SNA_fn_lReadLongFromFile, (void* buffer), 0x44F8D0);
FunctionPointer(int, SNA_fn_vReadStringFromFile, (int a1), 0x44F8F0);
ThiscallFunctionPointer(signed int, SNA_fn_ulTellWitchSectionInDscFile, (void* buffer), 0x44F950);
FunctionPointer(int, SNA_fn_vReadLevelNameFromFile, (), 0x44F9A0);
FunctionPointer(int, SNA_fn_vReadRandomDescFromFile, (), 0x44FA80);
FunctionPointer(int, SNA_fn_vReadDirectoriesDescFromFile, (), 0x44FB60);
FunctionPointer(int, SNA_fn_vReadMemoryDescFromFile, (), 0x450000);
FunctionPointer(int, SNA_fn_vReadVignetteDescFromFile, (), 0x450230);
FunctionPointer(int, SNA_fn_vReadBigFileDescFromFile, (), 0x450480);
FunctionPointer(int, SNA_fn_vReadDescGameOption, (), 0x4505E0);
FunctionPointer(int, SNA_fn_vReadLevelDescLevelSoundBanks, (), 0x4507B0);
FunctionPointer(int, SNA_fn_vReadLevelDescFromFile, (), 0x450850);
FunctionPointer(void*, SNA_fn_vInitFile, (char a1, struct_fileHandle* fileHandle), 0x450A00);
FunctionPointer(char, SNA_fn_bFOpen, (DWORD fileName, char a2, char a3, struct_fileHandle* fileHandle), 0x450A80);
FunctionPointer(bool, SNA_fn_bFClose, (unsigned int fileHandle), 0x450C40);
FunctionPointer(int, SNA_fn_ulFRead, (const void* object, int size, int count, struct_fileHandle* fileHandle), 0x450D90);
FunctionPointer(int, SNA_fn_bFileUseChecksum, (int a1), 0x450EB0);
FunctionPointer(int, SNA_fn_bFileUseEncryption, (struct_fileHandle* fileHandle), 0x450EC0);
FunctionPointer(int, SNA_fn_bFileUseProtection_unsure, (int a1), 0x450ED0);
FunctionPointer(DWORD, MoveFilePointer, (struct_fileHandle* fileHandle, LONG lDistanceToMove, int a3), 0x450EE0);
FunctionPointer(char, ReadFileCustom, (char* buffer, DWORD nNumberOfBytesToRead, struct_fileHandle* fileHandle), 0x451090);
FunctionPointer(int, ReadFileCustomNormal, (LPVOID lpBuffer, DWORD NumberOfBytesRead, int), 0x4512C0);
StdcallFunctionPointer(int, _SND_fn_vDisplayError, (int, int), 0x451450);
StdcallFunctionPointer(int, _SND_fn_vDisplayErrorEx, (int, int, int), 0x4514B0);
StdcallFunctionPointer(int, _SND_fn_vInitErrorSnd, (int a1), 0x4514D0);
StdcallFunctionPointer(int, __snd_assert, (LPCSTR lpText, int, int), 0x4515A0);
StdcallFunctionPointer(int, _snd_erreur_init, (int a1), 0x451680);
StdcallFunctionPointer(int, _SND_fn_iErreurInit, (int a1), 0x4516F0);
FunctionPointer(int, stop_son_all, (), 0x451EE0);
FunctionPointer(int, desinit_object_type, (), 0x452950);
FunctionPointer(int, desinit_volume_lines, (), 0x452960);
FunctionPointer(int, SND_fn_vDesInitSound, (), 0x452A30);
FunctionPointer(int, _SND_fn_vSetDopplerFactorSound, (int a1), 0x452A90);
FunctionPointer(int, _SND_fn_vSynchroSound, (), 0x452B70);
FunctionPointer(int, SND_fn_lSendRequestSound, (int, int, int, int, int), 0x452D20);
FunctionPointer(int, SND_fn_vKillAllObjectTypeSound, (int a1), 0x453080);
FunctionPointer(int, SND_fn_vKillAllObjectSound, (), 0x4530C0);
FunctionPointer(int, SND_fn_lAddObjectTypeSound2, (int, int), 0x4534D0);
FunctionPointer(int, musicPlaying, (), 0x4537D0);
FunctionPointer(char*, GetBNMName, (int bankId, char* dest, size_t Count), 0x453870);
FunctionPointer(int, CreateSoundBank, (char* bankId, int a2), 0x4538E0);
FunctionPointer(signed int, ReadSoundBank, (SoundBank* soundBank), 0x453990);
FunctionPointer(signed int, ReadSoundBank2, (SoundBank* soundBank), 0x453BF0);
StdcallFunctionPointer(int, _SND_fn_iGetNumberOfBanks, (), 0x453EC0);
StdcallFunctionPointer(int, _SND_fn_iGetNumberOfEventInBank, (int a1), 0x453ED0);
StdcallFunctionPointer(int, _SND_fn_vInitBankSnd, (int a1), 0x453EF0);
StdcallFunctionPointer(int, _SND_fn_vDesInitBankSnd, (), 0x453F10);
StdcallFunctionPointer(int, _SND_fn_pGetBinEvent, (int a1), 0x453F50);
StdcallFunctionPointer(int, _SND_fn_pGetBinRes, (int a1), 0x453F90);
StdcallFunctionPointer(int, _SND_fn_bStartLoadBanks, (), 0x453FE0);
StdcallFunctionPointer(int, _SND_fn_bStartLoadBanks2, (int a1), 0x453FF0);
StdcallFunctionPointer(signed int, _SND_fn_bInitBank, (int bankId), 0x454050);
StdcallFunctionPointer(signed int, _SND_fn_bInitBank2, (int bankId, int a2), 0x454060);
StdcallFunctionPointer(int, _SND_fn_bEndLoadBanks, (), 0x4540E0);
FunctionPointer(SOUND_BANK_STATE, _SND_fn_bLoadBinaryBank, (), 0x454210);
StdcallFunctionPointer(int, _SND_fn_bUnLoadBinaryBank, (int a1), 0x454290);
FunctionPointer(int, SND_fn_bInitDataLoadSnd, (), 0x454370);
StdcallFunctionPointer(int, _SND_fn_vSetSoftDirectory, (int a1), 0x4543C0);
StdcallFunctionPointer(int, _SND_fn_szGetSoftDirectory, (), 0x4543F0);
StdcallFunctionPointer(int, _SND_fn_vAddDataDirectory, (char* Str2), 0x454400);
StdcallFunctionPointer(int, _SND_fn_vRemoveDataDirectory, (char* Str2), 0x454470);
StdcallFunctionPointer(int, _SND_fn_vPurgeDataDirectory, (), 0x4544E0);
StdcallFunctionPointer(int, _SND_fn_bGetOneDataDirectory, (int, char* Dest, size_t Count), 0x4544F0);
StdcallFunctionPointer(int, _SND_fn_iGetNumberOfDataDirectory, (), 0x454530);
StdcallFunctionPointer(int, _SND_fn_iGetIdDataDirectory, (char* Str2), 0x454540);
StdcallFunctionPointer(int, _SND_fn_bIsDataDirectory, (char* Str2), 0x4545A0);
StdcallFunctionPointer(int, _SND_fn_vResolveFileName, (char* Source, int), 0x4545C0);
StdcallFunctionPointer(int, _SND_fn_bSetCurrentDirectory, (LPCSTR lpPathName), 0x454770);
StdcallFunctionPointer(int, _SND_fn_bGetCurrentDirectory, (LPSTR lpBuffer, DWORD nBufferLength), 0x454780);
StdcallFunctionPointer(int, _SND_fn_bLoadDataInMemAndSwap, (LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPCSTR lpFileName, LONG lDistanceToMove, int), 0x4547A0);
StdcallFunctionPointer(int, _SND_fn_bLoadDataInMem, (LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPCSTR lpFileName, LONG lDistanceToMove), 0x454820);
StdcallFunctionPointer(int, _SND_fn_dwFileSndLength, (HANDLE hFile), 0x454840);
StdcallFunctionPointer(int, _SND_fn_hOpenFileReadSnd, (LPCSTR lpFileName), 0x454850);
StdcallFunctionPointer(int, _SND_fn_dwReadFileSnd, (HANDLE hFile, DWORD nNumberOfBytesToRead, LPVOID lpBuffer), 0x454960);
StdcallFunctionPointer(int, _SND_fn_dwWriteFileSnd, (HANDLE hFile, DWORD nNumberOfBytesToWrite, LPCVOID lpBuffer), 0x4549A0);
StdcallFunctionPointer(int, _SND_fn_dwSeekFileSnd, (HANDLE hFile, LONG lDistanceToMove, DWORD dwMoveMethod), 0x4549D0);
StdcallFunctionPointer(int, _SND_fn_vCloseFileSnd, (HANDLE hObject), 0x4549F0);
StdcallFunctionPointer(int, _SND_fn_vInitThreadSnd, (), 0x454A00);
StdcallFunctionPointer(int, _SND_fn_vDesInitThreadSnd, (), 0x454A40);
StdcallFunctionPointer(int, _SND_fn_vMouchardThreadsnd, (char* Source, int), 0x454A70);
StdcallFunctionPointer(int, _SND_fn_vEnterCriticalSectionThreadSnd_, (), 0x454AD0);
StdcallFunctionPointer(int, _SND_fn_bTryToEnterCriticalSectionThreadSnd, (), 0x454B70);
StdcallFunctionPointer(int, _SND_fn_vQuitCriticalSectionThreadSnd, (), 0x454C20);
StdcallFunctionPointer(int, _SND_fn_vWaitForValueThreadSnd, (int, int), 0x454C40);
StdcallFunctionPointer(int, _SND_fn_vEnterCriticalSectionForErrorDisplay, (), 0x454CE0);
StdcallFunctionPointer(int, _SND_fn_vQuitCriticalSectionForErrorDisplay, (), 0x454D10);
StdcallFunctionPointer(int, _SND_fn_bEnterCriticalSectionForDriverThreadSnd, (), 0x454D30);
StdcallFunctionPointer(int, _dbgSND_fn_bGetAskedTheme, (int, int), 0x454E00);
StdcallFunctionPointer(int, _dbgSND_fn_bGetThemePosition, (int, int, int), 0x454E20);
StdcallFunctionPointer(int, _dbgSND_fn_vGetInfoForObjectSound, (int, int, char* Dest, size_t Count), 0x454E40);
StdcallFunctionPointer(int, _dbgSND_fn_lGetSizeOfSoundParam, (int a1), 0x454E60);
StdcallFunctionPointer(int, _SND_fn_vSetResNameCallback, (int a1), 0x454E80);
StdcallFunctionPointer(int, _SND_fn_czGetResNameFromEdId, (int a1), 0x454E90);
StdcallFunctionPointer(int, _dbgSND_fn_bSetResourceStaticVolume, (int, int), 0x454EB0);
StdcallFunctionPointer(int, _dbgSND_fn_rGetDopplerFactor, (), 0x454EE0);
StdcallFunctionPointer(int, _dbgSND_fn_vSendRequestSound, (int a1), 0x454EF0);
FunctionPointer(int, ParseSoundBank, (BNM_FileEntry* dataCopy, BNM_FileEntry* fileEntry, int a3), 0x457A10);
FunctionPointer(int, _SND_fn_vSetDopplerFactorSnd, (int a1), 0x457E40);
FunctionPointer(int, SND_fn_vDesInitSnd, (), 0x4581A0);
StdcallFunctionPointer(int, _SND_fn_rMulRealRealSnd, (int, int), 0x458670);
StdcallFunctionPointer(int, _SND_fn_rMulRealRealQuickSnd, (int, int), 0x458740);
StdcallFunctionPointer(int, _SND_fn_rSqrtRealSnd, (int a1), 0x458760);
StdcallFunctionPointer(int, _SND_fn_rDivRealRealSnd, (int, int), 0x458780);
StdcallFunctionPointer(int, _SND_fn_rAbsRealSnd, (int a1), 0x4587A0);
StdcallFunctionPointer(int, _SND_fn_rPseudoNormeRealSnd, (int a1, int a2, int a3), 0x4587B0);
StdcallFunctionPointer(int, _SND_fn_vSndRealTwinToSndReal, (int a1, int a2, int a3), 0x4587E0);
StdcallFunctionPointer(int, _SND_fn_rtSndRealToSndRealTwin, (int a1, int a2), 0x458810);
StdcallFunctionPointer(int, _SND_fn_vGetHModuleDbg, (), 0x458850);
StdcallFunctionPointer(int, _SND_fn_vGetHModuleMpeg, (), 0x458860);
StdcallFunctionPointer(int, _SND_fn_vGetHModuleWav, (), 0x458870);
StdcallFunctionPointer(int, _SND_fn_vGetHModuleCd, (), 0x458880);
StdcallFunctionPointer(int, _SND_fn_vGetHModuleAdpcm, (), 0x458890);
StdcallFunctionPointer(int, _SND_fn_vGetHModuleRecord, (), 0x4588A0);
StdcallFunctionPointer(int, _SND_fn_bGetOptions, (LPCSTR lpAppName, LPCSTR lpKeyName, LPSTR lpReturnedString, DWORD nSize), 0x4593C0);
StdcallFunctionPointer(int, _SND_fn_vSetOptions, (LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpString), 0x459440);
StdcallFunctionPointer(int, _SND_fn_vSetDefaultRollOff, (int a1), 0x459CF0);
StdcallFunctionPointer(int, _SND_fn_vGetDefaultRollOff, (int a1), 0x459D10);
StdcallFunctionPointer(int, _SND_fn_ucDistanceToVolume, (int a1), 0x459D30);
StdcallFunctionPointer(int, _SND_fn_ucDistanceToVolumeEx, (int, int), 0x459D80);
StdcallFunctionPointer(int, _SND_fn_rDopplerPitch, (int, int, int, int), 0x459E20);
StdcallFunctionPointer(int, _SND_fn_vSetDopplerFactor, (int a1), 0x459EC0);
StdcallFunctionPointer(int, _SND_fn_rGetDopplerFactor, (), 0x459EF0);
StdcallFunctionPointer(int, _SND_fn_ucPositionToPan, (int, int, int, int), 0x459F10);
StdcallFunctionPointer(int, _SND_fn_ucPositionToDolby, (int, int, int), 0x459FD0);
StdcallFunctionPointer(int, _SND_fn_rNormeVectorSnd, (int a1), 0x45B290);
StdcallFunctionPointer(int, _SND_fn_rPseudoNormeVectorSnd, (int a1), 0x45B2F0);
StdcallFunctionPointer(int, _SND_fn_rScalaireVectorSnd, (int, int), 0x45B330);
StdcallFunctionPointer(int, _SND_fn_rPseudoScalaireNormeVectorSnd, (int, int), 0x45B370);
StdcallFunctionPointer(int, _SND_fn_vProduitVectorSnd, (int, int, int), 0x45B3B0);
StdcallFunctionPointer(int, _SND_fn_bTestSnd_Pentium, (), 0x45B490);
StdcallFunctionPointer(int, _SND_fn_bTestSnd_MMX, (), 0x45B4B0);
StdcallFunctionPointer(int, _SND_fn_bTestSnd_WinMM, (int a1), 0x45B4F0);
StdcallFunctionPointer(int, _SND_fn_bTestSnd_Win32, (), 0x45B5C0);
StdcallFunctionPointer(int, _SND_fn_bTestSnd_WinNT, (), 0x45B600);
FunctionPointer(int, HIE_fn_vInitMatrixStack, (), 0x45B760);
FunctionPointer(int, HIE_fn_bPopMatrix, (), 0x45B7E0);
FunctionPointer(signed int, HIE_fn_bInitCameraMatrixStack, (HIE_tdstSuperObject* camera), 0x45B850);
FunctionPointer(char, PushOnCameraMatrixStack, (HIE_tdstSuperObject* cam), 0x45B890);
FunctionPointer(int, _SPO_ReinitSuperimposedArray, (), 0x45B940);
FunctionPointer(HIE_tdstSuperObject*, _HIE_fn_vIsolate, (HIE_tdstSuperObject* superObject), 0x45BBA0);
FunctionPointer(int, killAlwaysOrSomething, (int a1), 0x45BC00);
FunctionPointer(void, HIE_fn_vDestroySuperObject, (HIE_tdstSuperObject* superObject), 0x45BC60);
FunctionPointer(HIE_tdstSuperObject*, HIE_fn_hForceGetSuperObjectNextBrother, (HIE_tdstSuperObject* superObject), 0x45BEB0);
FunctionPointer(HIE_tdstSuperObject*, HIE_fn_hForceGetSuperObjectPrevBrother, (HIE_tdstSuperObject* superObject), 0x45BED0);
FunctionPointer(int, HIE_fn_vInvalidateAllGlobalMatrices, (), 0x45BF10);
FunctionPointer(int, HIE_fn_vInitGlobalMatrixFrameCounter, (int a1), 0x45BF60);
FunctionPointer(char, HIE_fn_vPushMatrix, (HIE_tdstSuperObject* superObject), 0x45BF80);
FunctionPointer(int, HIE_fn_vPopmatrix, (), 0x45BFF0);
FunctionPointer(char, _HIE_fn_vPushOnCameraMatrixStack, (HIE_tdstSuperObject* cameraSPO), 0x45C000);
FunctionPointer(int, HIE_fn_vPopOnCameraMatrixStack, (), 0x45C020);
FunctionPointer(int, HIE_fn_vComputeNewRelativeMatrix, (int a1), 0x45C030);
FunctionPointer(void*, HIE_fn_vChangeFather, (HIE_tdstSuperObject* superObject, HIE_tdstSuperObject* newFather, char a3), 0x45C080);
FunctionPointer(int, HIE_fn_vSendStaticWorldToViewport_0, (int a1, HIE_tdstSuperObject* sector, int a3, int a4), 0x45C210);
FunctionPointer(void, HIE_fn_vSendCharacterToViewport, (int a1, HIE_tdstSuperObject* superObject, int a3, int a4), 0x45C450);
FunctionPointer(int, HIE_fn_bSendSPOToFixViewport, (int, int), 0x45CC80);
FunctionPointer(void, fn_vSendOneModuleToViewPort, (int snaPointer, HIE_tdstSuperObject* a_spo, int a3), 0x45CDD0);
FunctionPointer(int, TMP_fn_vFirstInit, (), 0x45DBB0);
FunctionPointer(int, AllocateSNAPartMemory, (SIZE_T dwBytes), 0x45DBE0);
FunctionPointer(int, AllocateSNAPartMemory_6, (SIZE_T dwBytes), 0x45DC20);
FunctionPointer(char*, TMP_fnp_vMalloc, (int size), 0x45DC60);
FunctionPointer(int, TMP_fn_vFree, (int a1), 0x45DCE0);
StdcallFunctionPointer(int, TMR_fn_wStopTimer, (__int16), 0x45E0C0);
FunctionPointer(int, BreaksTheGameUnderDebugger, (), 0x45EA20);
FunctionPointer(int, VIG_fn_vFirstInit, (), 0x45EC20);
FunctionPointer(int, VIG_fn_vCloseBigFileVignette, (), 0x45EDA0);
FunctionPointer(int, VIG_fn_vRefreshActualVignette, (), 0x45EDF0);
FunctionPointer(int, VIG_fn_vDisplayBarToVignette, (char* Src), 0x45EED0);
FunctionPointer(int, VIG_fn_vCopyVignetteToBackBuffer, (char* Src), 0x45EFB0);
FunctionPointer(int, VIG_fn_vRefreshBarToVignette, (int, int, int), 0x45F530);
FunctionPointer(int, VIG_fn_vAddToProgressBar, (int a1), 0x45F7E0);
FunctionPointer(int, SetVignette, (int, char* Src, int), 0x45F880);
FunctionPointer(int, SetVignetteName, (int, char* Src, int), 0x45FBF0);
FunctionPointer(int, VIG_fn_vFreeVignette, (int a1), 0x45FC70);
FunctionPointer(void, exit_, (int Code), 0x45FC90);
FunctionPointer(void*, malloc_, (size_t Size), 0x45FC96);
FunctionPointer(void, free_, (void* Memory), 0x45FC9C);
FunctionPointer(int, fclose_, (FILE* File), 0x45FCA8);
FunctionPointer(FILE*, fopen_, (const char* Filename, const char* Mode), 0x45FCB4);
FunctionPointer(int, sprintf_, (char* Dest, const char* Format, ...), 0x45FE70);
FunctionPointer(int, __alloca_probe_, (char), 0x45FE80);
FunctionPointer(int, atoi_, (const char* Str), 0x45FEB6);
FunctionPointer(char*, strchr_, (const char* Str, int Val), 0x45FEBC);
FunctionPointer(int, sscanf_, (const char* Src, const char* Format, ...), 0x45FEC2);
FunctionPointer(size_t, fwrite_, (const void* Str, size_t Size, size_t Count, FILE* File), 0x45FEC8);
FunctionPointer(int, remove_, (const char* Filename), 0x45FECE);
FunctionPointer(size_t, fread_, (void* DstBuf, size_t ElementSize, size_t Count, FILE* File), 0x45FED4);
FunctionPointer(int, strncmp_, (const char* Str1, const char* Str2, size_t MaxCount), 0x45FEE6);
FunctionPointer(char*, strncpy_, (char* Dest, const char* Source, size_t Count), 0x45FEF8);
FunctionPointer(__int32, atol_, (const char* Str), 0x45FEFE);
FunctionPointer(char*, strtok_, (char* Str, const char* Delim), 0x45FF04);
FunctionPointer(char*, strncat_, (char* Dest, const char* Source, size_t Count), 0x45FF0A);
FunctionPointer(double, difftime_, (time_t Time1, time_t Time2), 0x45FF10);
FunctionPointer(int, rand_, (), 0x45FF22);
FunctionPointer(void*, memmove_, (void* Dst, const void* Src, size_t Size), 0x45FF2E);
FunctionPointer(char*, strrchr_, (const char* Str, int Ch), 0x45FF3A);
FunctionPointer(int, tolower_, (int C), 0x45FF40);
FunctionPointer(void, srand_, (unsigned int Seed), 0x45FF46);
FunctionPointer(int, _stricmp_, (const char* Str1, const char* Str2), 0x45FF58);
FunctionPointer(time_t, time_, (time_t* Time), 0x45FF5E);
FunctionPointer(unsigned int, _controlfp_, (unsigned int NewValue, unsigned int Mask), 0x45FF96);
FunctionPointer(int, AGO_vInit, (), 0x45FFA0);
FunctionPointer(int, DrawNoCdPirate, (int a1), 0x460600);
FunctionPointer(char, DrawsTexts, (int context_1), 0x460670);
FunctionPointer(int, CreateType65AGO, (int, int, int, float), 0x462BB0);
FunctionPointer(int, someTextFunction, (int, int, float), 0x465AA0);
FunctionPointer(char, PreDrawLanguageText, (int context), 0x465C10);
FunctionPointer(int, GetStringPointer, (int a1), 0x465D40);
FunctionPointer(int, ToCheckGetsLanguageText, (int, int), 0x465D60);
FunctionPointer(unsigned int, _DrawText, (int context, Text2D* text), 0x4660B0);
FunctionPointer(int, fn_vFirstInitAIMemory, (), 0x466770);
FunctionPointer(int, AllocateSNAPartMemory_5, (SIZE_T dwBytes), 0x4667A0);
FunctionPointer(int, AllocateSNAPartMemory_4, (SIZE_T dwBytes), 0x4667D0);
FunctionPointer(int, AI_fn_vAIUseFixMemory, (), 0x466840);
FunctionPointer(int, AI_fn_vAIUseLevelMemory, (), 0x466850);
FunctionPointer(int, fn_vInitAI, (), 0x4668E0);
FunctionPointer(char, fn_bDoIntelligencePerso, (HIE_tdstSuperObject* perso), 0x4668F0);
FunctionPointer(char, fn_bDoReflexPerso, (HIE_tdstSuperObject* a1), 0x466920);
FunctionPointer(int, fn_vReinitAI, (int a1), 0x466D00);
FunctionPointer(char, fn_vReinitAIComportWithFlags, (AI_tdstMind_* a1), 0x466D20);
FunctionPointer(int, fn_p_stMiscUltraProcedure, (int, int), 0x4675A0);
FunctionPointer(int, fn_p_stMiscNoProcedure, (HIE_tdstSuperObject* superObject, int), 0x467770);
FunctionPointer(int, fn_p_stKillPersoAndClearVariableProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x467850);
FunctionPointer(int, fn_p_stMiscProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x467970);
FunctionPointer(int, fn_p_stMiscMoreProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x467C60);
FunctionPointer(int, fn_p_stDynamProcedure, (HIE_tdstSuperObject* a2, int a3), 0x467CF0);
FunctionPointer(tdstNodeInterpret_*, fn_p_stHitPointsProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x467D90);
FunctionPointer(tdstNodeInterpret_*, ChangeHealth_Cheat_parent, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int a3), 0x467E80);
FunctionPointer(int, decreaseHealth, (int, int, int), 0x467F40);
FunctionPointer(int, fn_p_stHitPointsMaxProcedure, (int, int), 0x467FA0);
FunctionPointer(int, fn_p_stListZDDZDEProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x468180);
FunctionPointer(int, fn_p_stListProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4682B0);
FunctionPointer(int, fn_p_stListEnsembleProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x468660);
FunctionPointer(int, fn_p_stLinkTableProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x468730);
FunctionPointer(int, fn_p_stBuildObjectTableFromTableAndStringProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4687B0);
FunctionPointer(int, fn_p_stModuleControlProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x468970);
FunctionPointer(int, fn_p_stSaveGameProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x468AB0);
FunctionPointer(int, fn_p_stChangeActivationChannelProcedure, (HIE_tdstSuperObject* a2, int a3), 0x468B10);
FunctionPointer(int, fn_p_stFogProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x468B90);
FunctionPointer(int, fn_p_stPersoLightProcedure, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x468E90);
FunctionPointer(int, fn_p_stSoundProcedure, (HIE_tdstSuperObject* a2, int a3), 0x4691E0);
FunctionPointer(int, fn_p_stParticleGeneratorProcedure, (HIE_tdstSuperObject* a2, int a3), 0x4692D0);
FunctionPointer(int, fn_p_stKeyboardProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469520);
FunctionPointer(int, fn_p_stChangeComportIntelligenceProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469580);
FunctionPointer(int, fn_p_stChangeComportReflexProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469640);
FunctionPointer(int, fn_p_stChangeMyComportIntelligenceProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4696C0);
FunctionPointer(int, fn_p_stChangeMyComportReflexProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469710);
FunctionPointer(int, fn_p_stChangeMyComportIntelligenceAndReflexProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469760);
FunctionPointer(int, fn_p_stTurnProcedure, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x4697D0);
FunctionPointer(int, fn_p_stCustomBitsProc, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x4698A0);
FunctionPointer(int, fn_p_stStringProc, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469960);
FunctionPointer(int, fn_p_stIntToText, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x469AC0);
FunctionPointer(int, fn_p_stCollideCommunicationProc, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x469B30);
FunctionPointer(int, fn_p_st3DProc_ForReorientation, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x469CB0);
FunctionPointer(int, fn_p_stChangePersoHorizSighting, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46A890);
FunctionPointer(int, fn_p_st3DProc, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46AB20);
FunctionPointer(int, fn_p_stWorldMapProc, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46BB10);
FunctionPointer(int, fn_p_stOptionChangerProc, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46BC60);
FunctionPointer(int, fn_p_stChangeScreen, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46BD40);
FunctionPointer(int, fn_p_stFixePositionPerso, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46BF20);
FunctionPointer(int, fn_p_stFixePositionZDx, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46BFE0);
FunctionPointer(int, fn_p_SetMechanicOption, (HIE_tdstSuperObject* a2, int a3), 0x46C1D0);
FunctionPointer(int, fn_p_stChangeLigthIntensity, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46C640);
FunctionPointer(int, fn_p_SetMechanicRealParameter, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46C710);
FunctionPointer(int, fn_p_SetMechanic3RealParameter, (HIE_tdstSuperObject* a2, int a3), 0x46C980);
FunctionPointer(int, fn_p_SetMechanicVectorParameter, (HIE_tdstSuperObject* a2, int a3), 0x46CA40);
FunctionPointer(int, fn_p_SetMechanicSpeedVector, (HIE_tdstSuperObject* a2, int a3), 0x46CBD0);
FunctionPointer(int, fn_p_SetMechanicSpeedReal, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46CE00);
FunctionPointer(int, fn_SPO_p_stChangeFlag, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46D8A0);
FunctionPointer(int, fn_p_stChangeActorSpoFlag, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46D920);
FunctionPointer(int, fn_p_PlatformLink, (HIE_tdstSuperObject* a2, int a3), 0x46D9A0);
FunctionPointer(int, fn_p_HierFatherLink, (HIE_tdstSuperObject* a2, int a3), 0x46DA50);
FunctionPointer(int, fn_p_SetMechanicListParameter, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46DC00);
FunctionPointer(int, fn_p_stResetLastCollisionActor, (HIE_tdstSuperObject* a2, int a3), 0x46DCE0);
FunctionPointer(int, fn_p_SetMechanic3Real, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46DD50);
FunctionPointer(int, fn_p_SetMechanicClimbSpeedLimit, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46DE50);
FunctionPointer(int, fn_p_stShadow, (HIE_tdstSuperObject* a2, int a3), 0x46DEA0);
FunctionPointer(int, fn_p_stSetPrivilegeActivationZDx, (HIE_tdstSuperObject* a2, int a3), 0x46DFB0);
FunctionPointer(int, fn_p_stSetCollSetCollisionFlag, (HIE_tdstSuperObject* a2, int a3), 0x46E180);
FunctionPointer(int, fn_p_stSetComputationFrequency, (HIE_tdstSuperObject* a2, int a3), 0x46E2A0);
FunctionPointer(int, fn_p_stActivationZDR, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46E360);
FunctionPointer(int, fn_p_LinkControl, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46E3C0);
FunctionPointer(int, fn_p_stReadAnalogJoystickMario, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46E450);
FunctionPointer(int, fn_p_stSetAnalogJoystickAxes, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46F830);
FunctionPointer(int, fn_p_stInitKeyBoardDirections, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FAA0);
FunctionPointer(int, fn_p_stSetCenterPosition, (int, int), 0x46FB30);
FunctionPointer(int, fn_p_stSetMaximalValues, (int, int), 0x46FBC0);
FunctionPointer(int, fn_p_stSetBooleanInArray, (HIE_tdstSuperObject* superObject, int), 0x46FC60);
FunctionPointer(int, fn_p_stSetDefaultFormatCharacter, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FD70);
FunctionPointer(int, fn_p_stSetVideoOptions, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FDE0);
FunctionPointer(int, fn_p_stSelectResolution, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FE00);
FunctionPointer(int, fn_p_stChangeBrightness, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FE40);
FunctionPointer(int, fn_p_stSetInStereoMode, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FE80);
FunctionPointer(int, fn_p_stSetPrevMusicFadeOut, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FEC0);
FunctionPointer(int, fn_p_stSomethingDynamics, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x46FF00);
FunctionPointer(int, fn_p_stSaveCurrentSoundRequest, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x46FF90);
FunctionPointer(int, script_proc_sub_470000, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470000);
FunctionPointer(int, script_proc_sub_470210, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470210);
FunctionPointer(int, fn_p_stTextSuperImposed, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470270);
FunctionPointer(int, fn_p_stCode4ValideNomDuSlot, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4702A0);
FunctionPointer(int, fn_p_stCode4RestoreNomDuSlot, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470450);
FunctionPointer(int, fn_p_stTextIntegerParameter, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4704C0);
FunctionPointer(int, fn_p_stTextRealParameter, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470510);
FunctionPointer(int, fn_p_stCode4FormateTexte, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470560);
FunctionPointer(int, fn_p_stCode4ChangeCaractere, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470660);
FunctionPointer(int, fn_p_stCode4AirPointsProcedures, (int, int), 0x470770);
FunctionPointer(int, fn_p_stCode4MagicPointsProcedures, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4708B0);
FunctionPointer(int, fn_p_stSetLocalLight, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4709D0);
FunctionPointer(int, fn_p_stSetLight, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470B20);
FunctionPointer(int, fn_p_stCapabilityProcedure, (HIE_tdstSuperObject* a2, int a3), 0x470C80);
FunctionPointer(int, fn_p_stReinitGraphProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470D60);
FunctionPointer(int, fn_p_stSetScrollSpeed, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x470DA0);
FunctionPointer(int, fn_p_stRLIProcedure, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x470F20);
FunctionPointer(int, fn_p_stManageFrame, (HIE_tdstSuperObject* a2, int a3), 0x471020);
FunctionPointer(int, fn_p_stSPOSuperimpoed, (HIE_tdstSuperObject* a2, int a3), 0x4710C0);
FunctionPointer(int, fn_p_stSetSPOCoordinates, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x471370);
FunctionPointer(int, fn_p_stMiscProcOnTypeOfWP, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4713E0);
FunctionPointer(int, fn_p_stTractionFactorProcedure, (HIE_tdstSuperObject* a2, int a3), 0x471500);
FunctionPointer(int, fn_p_stTurnToPosition, (HIE_tdstSuperObject* a2, int a3), 0x471570);
FunctionPointer(int, fn_p_stFreezeAnim, (HIE_tdstSuperObject* a2, int a3), 0x471780);
FunctionPointer(int, fn_p_stFixePositionFade, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4717F0);
FunctionPointer(int, fn_p_stSortArray, (HIE_tdstSuperObject* superObject, int), 0x471990);
FunctionPointer(int, fn_p_stActiveJoystickAnal, (int, int), 0x471A50);
FunctionPointer(int, fn_p_stSetZDxSize, (HIE_tdstSuperObject* a2, int a3), 0x471A90);
FunctionPointer(int, fn_p_stSetSoundVolume, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x471D10);
FunctionPointer(int, fn_p_stSetDopplerEffect, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x471E00);
FunctionPointer(int, fn_p_stPauseSound, (int, int), 0x471E40);
FunctionPointer(int, fn_p_stPlayDemo, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x471E80);
FunctionPointer(int, fn_p_stSetTooFarLimit, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x471FB0);
FunctionPointer(int, fn_p_stSetTransparencyZone, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x472020);
FunctionPointer(int, fn_p_stBaseFrequenceForMenu, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4720A0);
FunctionPointer(int, fn_p_stSaveSinusEffectContext, (int, int), 0x4720E0);
FunctionPointer(int, fn_p_stTurnPersoProcedure, (HIE_tdstSuperObject* a2, int a3), 0x472100);
FunctionPointer(int, fn_p_stChangeActionProcedure, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x472290);
FunctionPointer(int, fn_p_stChangeActionRandomProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472370);
FunctionPointer(int, fn_p_stDisplayProcedure, (HIE_tdstSuperObject* a2, int a3), 0x472400);
FunctionPointer(int, fn_p_stVisualGameMaterialProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472600);
FunctionPointer(int, fn_p_stMenuAndVignetteProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472930);
FunctionPointer(int, fn_p_st_FootPath_AddFootPrint, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472990);
FunctionPointer(int, fn_p_st_FootPath_Clear, (int a1), 0x4729D0);
FunctionPointer(int, fn_p_st_SinusEffect_SetFreq, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472A00);
FunctionPointer(int, fn_p_st_SinusEffect_SetAmplitude, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472A80);
FunctionPointer(int, fn_p_st_SinusEffect_SetRLIParams, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472B00);
FunctionPointer(int, fn_p_st_SinusEffect_SetState, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472BA0);
FunctionPointer(int, fn_p_st_SPO_SetDrawFlag, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472C40);
FunctionPointer(int, fn_p_st_SPO_SetEngineDisplayModeFlag, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472CD0);
FunctionPointer(int, fn_p_st_ACT_SetDrawFlag, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472D60);
FunctionPointer(int, fn_p_stLoopKeyWord, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472E90);
FunctionPointer(int, fn_p_stEndLoopKeyWord, (), 0x472F00);
FunctionPointer(int, fn_p_stBreakKeyword, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472F30);
FunctionPointer(tdstNodeInterpret_*, fn_p_stAGOProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x472FA0);
FunctionPointer(int, fn_p_stCheatCodeProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4730E0);
FunctionPointer(int, fn_p_stJFFTXTProcedure, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x4731B0);
FunctionPointer(int, CAM_fn_vForceCameraPos, (HIE_tdstSuperObject* superObject, int), 0x473420);
FunctionPointer(int, CAM_fn_vForceCameraTgt, (HIE_tdstSuperObject* spo, int a2, int a3), 0x473480);
FunctionPointer(int, CAM_fn_vComputeProjection, (int, int, int), 0x4736F0);
FunctionPointer(int, CAM_fn_bEqualVectorWithEpsilon, (int, int, float), 0x4739D0);
FunctionPointer(int, CAM_fn_vComputeAnglesBetweenTwoVectors, (int, int, int, int, int, int), 0x473AC0);
FunctionPointer(int, CAM_fn_vForceBestPosition, (int a1), 0x4746C0);
FunctionPointer(int, fn_vComputeCollideResult, (int a1), 0x474780);
FunctionPointer(int, fn_p_stCode4VitessePadAnalogique, (int, int, int), 0x474A00);
FunctionPointer(int, fn_p_stCode4LitCentreZDx, (int, int, int), 0x474B60);
FunctionPointer(int, fn_p_stCode4LitDimensionZDx, (int, int, int), 0x474D40);
FunctionPointer(int, fn_p_stCode4LitAxeZDx, (int, int, int), 0x474EF0);
FunctionPointer(int, fn_p_stCode4VecteurPointAxe, (int, int, int), 0x4750F0);
FunctionPointer(int, fn_p_stCode4LitPositionZDx, (int, int, int), 0x4754D0);
FunctionPointer(int, fn_p_stCode4VitesseHorizontaleDuPerso, (int, HIE_tdstSuperObject* superObject, int), 0x475610);
FunctionPointer(int, fn_p_stCode4TextAffiche, (int, int), 0x475680);
FunctionPointer(int, fn_p_stCode4PointsDair, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x475F90);
FunctionPointer(int, airscripthandling, (), 0x475FED);
FunctionPointer(int, fn_p_stCode4PointsDeMagie, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x476130);
FunctionPointer(int, fn_p_stCode4PersoLePlusProche, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x476960);
FunctionPointer(int, fn_p_stGraphFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x476F20);
FunctionPointer(int, fn_p_stGraphToWayFunction, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x4770F0);
FunctionPointer(int, fn_p_stWayFunction, (HIE_tdstSuperObject* a2, int a3, int GetSetParam), 0x477300);
FunctionPointer(int, fn_p_stCloserWPInGraph, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x477630);
FunctionPointer(int, fn_p_stTravelOnAGraph, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x477A80);
FunctionPointer(int, fn_p_stMiscFuncOnTypeOfWP, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x477CC0);
FunctionPointer(int, fn_p_stGetSituationOnRail, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x477D20);
FunctionPointer(int, fn_p_stPersoCapabilityFunction, (HIE_tdstSuperObject* a2, int, int), 0x477E90);
FunctionPointer(int, fn_p_stCapabilityFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x477EE0);
FunctionPointer(int, fn_p_stGetScrollSpeed, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x477F10);
FunctionPointer(int, fn_p_stGetNbFrame, (HIE_tdstSuperObject* a2, int a3, int), 0x477F90);
FunctionPointer(int, fn_p_stVectorOperations, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x478000);
FunctionPointer(int, fn_p_stGetSPOCoordinates, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x478180);
FunctionPointer(int, fn_p_stGetNbActivePerso, (int, int, int), 0x478220);
FunctionPointer(int, fn_p_stTractionFactorFunction, (HIE_tdstSuperObject* a2, int a3, int), 0x478260);
FunctionPointer(int, fn_p_stGetZDxCenter, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x4782C0);
FunctionPointer(int, fn_p_stGetNearestActorInCurrentSector, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x478450);
FunctionPointer(int, fn_p_stDotProduct, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x4784F0);
FunctionPointer(int, fn_p_stGetCPUCounter, (int, int, int), 0x478560);
FunctionPointer(int, fn_p_stGetDTFunction, (int, int, int), 0x478580);
FunctionPointer(int, fn_p_stGetNormalCollideVector, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x4785B0);
FunctionPointer(int, fn_p_stCollideCommunicationFunc, (HIE_tdstSuperObject* a2, int a3, int GetSetParam), 0x4788E0);
FunctionPointer(int, fn_p_stGetPersoSighting, (HIE_tdstSuperObject* a2, int, int), 0x478A20);
FunctionPointer(tdstNodeInterpret_*, fn_p_st3DFunc, (HIE_tdstSuperObject* theSuperObject, tdstNodeInterpret_* nodeInterpreter, tdstGetSetParam_* GetSetParam), 0x478AA0);
FunctionPointer(int, fn_p_stNamesFunc, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x478E10);
FunctionPointer(__int16, _fn_xMaskOfObstacle, (DNM_stMecObstacle* obstacle), 0x479220);
FunctionPointer(tdstNodeInterpret_*, fn_p_stGetCollidePoint, (HIE_tdstSuperObject* spo, tdstNodeInterpret_* nodeInterpreter, tdstGetSetParam_* GetSetParam), 0x479260);
FunctionPointer(int, fn_p_stGetLastCollisionActor, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x479680);
FunctionPointer(tdstNodeInterpret_*, fn_p_stGetCollision, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, Vector3* GetSetParam), 0x479720);
FunctionPointer(int, fn_p_stGetCollisionWithCollideMaterial, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x479910);
FunctionPointer(int, fn_p_stComputeRebondVector, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x479AC0);
FunctionPointer(int, fn_p_stVectorAndAngle, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x479BE0);
FunctionPointer(int, fn_p_GetMechanicParameter, (HIE_tdstSuperObject* a2, int a3, int), 0x47A150);
FunctionPointer(int, fn_p_GetHierarchyLink, (HIE_tdstSuperObject* a2, int a3, int), 0x47A3E0);
FunctionPointer(int, fn_p_GetPriviligedActivationZdx, (HIE_tdstSuperObject* a2, int a3, int), 0x47A490);
FunctionPointer(int, fn_p_GetComputationFrequency, (HIE_tdstSuperObject* a2, int a3, int), 0x47A590);
FunctionPointer(int, fn_p_ComputeJumpImpulsion, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x47A660);
FunctionPointer(int, fn_p_GetBooleanInArray, (HIE_tdstSuperObject* superObject, int, int GetSetParam), 0x47A8E0);
FunctionPointer(int, fn_p_stGetButtonName, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47AA70);
FunctionPointer(int, fn_p_stGetDriversAvailable, (int, int, int), 0x47AAB0);
FunctionPointer(int, fn_p_stGetCurrentLanguageId, (int, int, int), 0x47AAD0);
FunctionPointer(int, fn_p_stGetNbLanguages, (int, int, int), 0x47AAF0);
FunctionPointer(int, fn_p_stGetLanguageText, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47AB10);
FunctionPointer(int, fn_p_stTextToInt, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47AB50);
FunctionPointer(int, fn_p_stOptionRecupererFunc, (int, int, int), 0x47ABA0);
FunctionPointer(int, fn_p_stOptionSlotIsValid, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47ABF0);
FunctionPointer(int, fn_p_stGetNbAvailableResolution, (int, int, int), 0x47AC30);
FunctionPointer(int, fn_p_stGetCurrentResolution, (int, int, int), 0x47AC50);
FunctionPointer(int, fn_p_stSaveCurrentResolution, (int, int, int), 0x47AC70);
FunctionPointer(int, fn_p_stIsDisplayModeAvailable, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47AC90);
FunctionPointer(int, fn_p_stGetNameResolution, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47ACD0);
FunctionPointer(int, fn_p_stGetBrightness, (int, int, int), 0x47AD10);
FunctionPointer(int, fn_p_stGetNbSlotsAvailable, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47AD30);
FunctionPointer(int, fn_p_stGetVideoOptions, (int, int, int), 0x47AD60);
FunctionPointer(int, fn_p_stGetMSSoundValues, (HIE_tdstSuperObject* a2, int a3, int), 0x47AD80);
FunctionPointer(int, fn_p_stGetStdGameLimit, (HIE_tdstSuperObject* superObject, int a3, uint32_t* arg8), 0x47AE10);
FunctionPointer(int, fn_p_ExecuteVariable, (), 0x47AEB0);
FunctionPointer(int, fn_p_stComputeProtectKey, (HIE_tdstSuperObject* a2, int a3, int), 0x47B0E0);
FunctionPointer(int, fn_p_stComputeXor, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47B170);
FunctionPointer(int, fn_p_stComputeNot, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47B340);
FunctionPointer(int, fn_p_stDistanceToPersoCenter, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47B480);
FunctionPointer(int, fn_p_stDistanceToPerso, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47B6C0);
FunctionPointer(tdstNodeInterpret_*, _fn_p_stGetPersoAbsolutePosition, (HIE_tdstSuperObject* so, tdstNodeInterpret_* nodeInterpret, int a3), 0x47B7D0);
FunctionPointer(int, fn_p_stGetMyAbsolutePosition, (int, int, int), 0x47B830);
FunctionPointer(int, fn_p_stGetWpAbsolutePosition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47B860);
FunctionPointer(int, fn_p_stDistanceFunction, (float, int, float), 0x47B8D0);
FunctionPointer(int, fn_p_stMathTernarReal, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47BB70);
FunctionPointer(int, fn_p_stMathFunctionInt, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47BCE0);
FunctionPointer(int, fn_p_stMathAbsoluteValue, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47BD70);
FunctionPointer(int, fn_p_stMathFunctionReal, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47BDC0);
FunctionPointer(int, fn_p_stLocalToGlobal, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int a3), 0x47C1A0);
FunctionPointer(int, fn_p_stGlobalToLocal, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int a3), 0x47C250);
FunctionPointer(int, fn_p_stVectorFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47C350);
FunctionPointer(int, fn_p_stRealFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47C810);
FunctionPointer(int, fn_p_stHitPointsAndHitPointsMaxFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47C940);
FunctionPointer(int, fn_p_stTimeFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47CAF0);
FunctionPointer(int, fn_p_stListFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47CB40);
FunctionPointer(int, fn_p_stInputFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47CBF0);
FunctionPointer(int, fn_p_stMiscFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47CC30);
FunctionPointer(int, fn_p_stGameMaterialFunction, (HIE_tdstSuperObject* a2, int, int), 0x47CE80);
FunctionPointer(int, fn_p_stVisualGameMaterialFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47CF90);
FunctionPointer(int, fn_p_stColorFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x47D190);
FunctionPointer(int, fn_p_st_SPO_GetDrawFlag, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47D6A0);
FunctionPointer(int, fn_p_stGetFrameLength, (int, int, int), 0x47D710);
FunctionPointer(int, fn_p_stIsAValidSlotName, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47D730);
FunctionPointer(int, fn_p_stSaveGameFunction, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x47D830);
FunctionPointer(int, fn_vReInitAllDynamicActors, (), 0x47D9C0);
FunctionPointer(void, fn_vReinitActors, (HIE_tdstSuperObject* sector), 0x47D9E0);
FunctionPointer(int, CAM_fn_p_stUpdatePosition, (int, int), 0x47DA40);
FunctionPointer(int, CAM_fn_p_stChangeVectorParameter, (HIE_tdstSuperObject* a2, int a3), 0x47DDE0);
FunctionPointer(int, CAM_fn_p_stChangeRealParameter, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47DEB0);
FunctionPointer(tdstNodeInterpret_*, CAM_fn_p_stChangeTgtPerso, (HIE_tdstSuperObject* camSPO, tdstNodeInterpret_* nodeInterpreter), 0x47E200);
FunctionPointer(int, CAM_fn_p_stChangeSecondTgtPerso, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47E2E0);
FunctionPointer(int, CAM_fn_p_stChangeChannel, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47E400);
FunctionPointer(int, CAM_fn_p_stActivate, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47E4C0);
FunctionPointer(int, CAM_fn_p_stAssociateViewport, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x47E540);
FunctionPointer(int, CAM_fn_p_stSetIAFlags, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47E670);
FunctionPointer(int, CAM_fn_p_stSetDNMFlags, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47E830);
FunctionPointer(int, CAM_fn_p_stShowInfo, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47EA00);
FunctionPointer(int, CAM_fn_p_stChangeConstants, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47EA70);
FunctionPointer(int, CAM_fn_p_stConstants, (int, int), 0x47EBD0);
FunctionPointer(int, CAM_fn_p_stSetForce, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x47EC20);
FunctionPointer(int, CAM_fn_p_stReset, (HIE_tdstSuperObject* a2, int), 0x47ED90);
FunctionPointer(int, CAM_fn_p_stForceBestPos, (HIE_tdstSuperObject* a2, int), 0x47EDD0);
FunctionPointer(int, CAM_fn_p_stForceNormalState, (HIE_tdstSuperObject* a2, int), 0x47EF20);
FunctionPointer(int, CAM_fn_p_stForceMovingOnRail, (HIE_tdstSuperObject* a2, int), 0x47EF80);
FunctionPointer(int, CAM_fn_p_stCameraMode, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x47F560);
FunctionPointer(int, WPG_fn_hCreate, (), 0x47F590);
FunctionPointer(signed int, WPG_fn_lAddArcToWayPoint, (WP_tdstGraph_* graph, WP_tdstWayPoint_* waypointFrom, WP_tdstWayPoint_* waypointTo, int a4, int a5), 0x47F730);
FunctionPointer(signed int, WPG_fn_lGetLinkCapabilities, (WP_tdstGraph_* graph, WP_tdstWayPoint_* pointA, WP_tdstWayPoint_* pointB, int a4), 0x47F800);
FunctionPointer(signed int, WPG_fn_lGetLinkWeight, (WP_tdstGraph_* graph, WP_tdstWayPoint_* pointA, WP_tdstWayPoint_* pointB, int a4), 0x47F8C0);
FunctionPointer(signed int, _WPG_fn_lGetArcCapabilities, (struct_Arc* arcList, WP_tdstGraphNode_* node, int a3), 0x480190);
FunctionPointer(int, evalVisualMaterial_39, (int a1, int a2, tdstGetSetParam_* a3), 0x480390);
FunctionPointer(int, evalColor_40, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x4803B0);
FunctionPointer(int*, evalField, (int a1, int* a2, tdstNodeInterpret_* a3), 0x4803D0);
FunctionPointer(tdstNodeInterpret_*, evalDsgVarRef, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* getSetParam), 0x480400);
FunctionPointer(int, evalConstant_6, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* a3), 0x480430);
FunctionPointer(int, evalButton_25, (int a1, int a2, tdstGetSetParam_* a3), 0x480450);
FunctionPointer(int, evalSuperObjectRef_30, (int, int, int), 0x480470);
FunctionPointer(int, evalObjectTableRef_29, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x480490);
FunctionPointer(tdstNodeInterpret_*, evalPersoRef_11, (HIE_tdstSuperObject* so, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* getSetParam), 0x4804B0);
FunctionPointer(int, evalActionRef_24, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x4804D0);
FunctionPointer(tdstNodeInterpret_*, evalReal_8, (HIE_tdstSuperObject* so, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* a3), 0x4804F0);
FunctionPointer(tdstNodeInterpret_*, evalVector_21, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* getSetParam), 0x480510);
FunctionPointer(int, evalConstantVector_21, (int a1, int nodeInterp, tdstGetSetParam_* a3), 0x4805A0);
FunctionPointer(int, evalWayPointRef_10, (int, int, int), 0x4805D0);
FunctionPointer(int, evalModuleRef_22, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x4805F0);
FunctionPointer(int, evalDsgVarId_23, (int, int, int), 0x480610);
FunctionPointer(int, evalMask_26, (int a1, int a2, tdstGetSetParam_* a3), 0x480630);
FunctionPointer(tdstNodeInterpret_*, evalString_9, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* param), 0x480650);
FunctionPointer(int, evalLipsSynchroRef_28, (int, int, int), 0x480670);
FunctionPointer(int, evalSoundEventRef_33, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x480690);
FunctionPointer(int, evalFamilyRef_32, (int, int, int), 0x4806B0);
FunctionPointer(int, evalEndMacro_20, (int, int, int), 0x4806D0);
FunctionPointer(tdstNodeInterpret_*, evalBeginMacro_20, (HIE_tdstSuperObject* a1, tdstNodeInterpret_* a2, tdstGetSetParam_* params), 0x4806F0);
FunctionPointer(int, evalComportRef_34, (int a1, int a2, tdstGetSetParam_* a3), 0x480710);
FunctionPointer(tdstNodeInterpret_*, evalTextRef_36, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* param), 0x480730);
FunctionPointer(int, evalParticleGenerator_37, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x480750);
FunctionPointer(int, evalGameMaterialRef_38, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x480770);
FunctionPointer(int, evalMaybeCineRef_42, (int, int, int), 0x480790);
FunctionPointer(int, evalLight_43, (int, int, int), 0x4807B0);
FunctionPointer(int, evalCaps_44, (int, int, int), 0x4807D0);
FunctionPointer(int, evalNull, (int, int), 0x4807F0);
FunctionPointer(int, evalKeyWord, (HIE_tdstSuperObject* so, tdstNodeInterpret_* ni, tdstGetSetParam_* params), 0x480800);
FunctionPointer(__int64, evalCondition, (int a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3), 0x480830);
FunctionPointer(int, evalFunction, (HIE_tdstSuperObject* so, tdstNodeInterpret_* ni, int a3), 0x480880);
FunctionPointer(int, evalOperator, (HIE_tdstSuperObject* so, tdstNodeInterpret_* ni, int a3), 0x4808B0);
FunctionPointer(int, fn_vSetProcedureActionReturn, (char), 0x4808E0);
FunctionPointer(int, fn_ucGetProcedureActionReturn, (), 0x4808F0);
VoidFunc(evalProcedure, 0x480900);
FunctionPointer(int, fn_p_stSkipThisArgument, (int a1), 0x4809B0);
FunctionPointer(int, _fn_p_stComputeActionStartPerso, (HIE_tdstSuperObject* superObject, int a2, int metaActionID, int a4), 0x4809E0);
FunctionPointer(int, executeMetaActionFunctionPtr, (int, int), 0x480A30);
FunctionPointer(tdstNodeInterpret_*, evalMetaAction_20, (int a1, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* a3), 0x480A50);
FunctionPointer(int, checkNodeInterpret, (int, char), 0x480BB0);
FunctionPointer(char, determineActionReturn, (tdstGetSetParam_* getSetParam, tdstNodeInterpret_* nodeInterpret, char a3), 0x480D10);
FunctionPointer(char, fn_bIntelligenceEngine, (HIE_tdstSuperObject* superObject, tdstIntelligence_* intelligence), 0x480D80);
FunctionPointer(char, fn_bIntelligenceRulesEngine, (HIE_tdstSuperObject* superObject_, tdstIntelligence_* intelligence), 0x480E00);
FunctionPointer(char, fn_ucIntelligenceScheduleEngine, (HIE_tdstSuperObject* superObject, tdstIntelligence_* intelligence), 0x480ED0);
FunctionPointer(int, fn_ucGetTreeNbParam, (int a1), 0x4810C0);
FunctionPointer(int, __Z24fn_p_stDefaultActionInitP20HIE_tdstSuperObject_P18tdstNodeInterpret_, (int, int), 0x481120);
FunctionPointer(int, fn_ucGetDsgVarFloat, (int, int, int), 0x481330);
FunctionPointer(uint32_t, __Z19fn_ucGetDsgVarPersoPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x481350);
FunctionPointer(int, fn_ucGetDsgVarSuperObject, (int, int, int), 0x4813A0);
FunctionPointer(uint32_t, __Z20fn_ucGetDsgVarVectorPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x4813C0);
FunctionPointer(uint32_t, __Z18fn_ucGetDsgVarCapsPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x4813F0);
FunctionPointer(uint32_t, __Z19fn_ucGetDsgVarGraphPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x481410);
FunctionPointer(int, fn_ucGetDsgVarWayPoint, (int, int, int), 0x481430);
FunctionPointer(uint32_t, __Z20fn_ucGetDsgVarActionPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x481450);
FunctionPointer(uint32_t, __Z21fn_ucGetDsgVarComportPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x481470);
FunctionPointer(uint32_t, __Z18fn_ucGetDsgVarTextPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x481490);
FunctionPointer(uint32_t, __Z18fn_ucGetDsgVarListPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x4814B0);
FunctionPointer(int, fn_ucGetDsgVarByte, (int, int, int), 0x4814F0);
FunctionPointer(int, fn_ucGetDsgVarWord, (int, int, int), 0x481510);
FunctionPointer(int, fn_ucGetDsgVarWord_2, (int, int, int), 0x481530);
FunctionPointer(int, fn_ucGetDsgVarInteger_2, (int, int, int), 0x481550);
FunctionPointer(uint32_t, __Z26fn_ucGetDsgVarGameMaterialPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x481570);
FunctionPointer(int, __Z19fn_ucGetDsgVarArrayPvhP16tdstGetSetParam_, (tdstGetSetParam_** a1, unsigned __int8 dsgVarType, tdstGetSetParam_* a3), 0x4815A0);
FunctionPointer(int, fn_p_fn_pGetDsgVarGetFunctionPtr, (HIE_tdstSuperObject* a1, tdstNodeInterpret_* a2, tdstGetSetParam_* a3, int a4), 0x481630);
FunctionPointer(int, fn_ucSetDsgVarFloat, (int, int, int), 0x481660);
FunctionPointer(int, fn_ucSetDsgVarSuperObject, (int, int, int), 0x481680);
FunctionPointer(int, fn_ucSetDsgVarGeneric, (int, int, int), 0x4816D0);
FunctionPointer(int, fn_ucSetDsgVarWord, (int, int, int), 0x481750);
FunctionPointer(char, fn_ucSetDsgVarInteger, (void* dst, void* asd, int* src), 0x481770);
FunctionPointer(uint32_t, __Z19fn_ucSetDsgVarArrayPvhP16tdstGetSetParam_, (void*, unsigned __int8, tdstGetSetParam_*), 0x4817B0);
FunctionPointer(int, GimmeLumz, (int, int, int, int), 0x481800);
FunctionPointer(tdstNodeInterpret_*, fn_p_stScalarOperator, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int a3), 0x481880);
FunctionPointer(int, _fn_p_stVectorOperator, (int, int, int), 0x481A60);
FunctionPointer(tdstNodeInterpret_*, fn_p_stOperatorGetPerso, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, tdstGetSetParam_* a_GetSetParam), 0x481C10);
FunctionPointer(int, _fn_p_stArrayOperator, (int, int, int), 0x481C50);
FunctionPointer(int, _fn_p_stDotOperator, (int, int, int), 0x481CE0);
FunctionPointer(int, _fn_p_stVectorDotOperator, (int, int, int), 0x481DA0);
FunctionPointer(int, _fn_p_stAffectOperator, (int, float, int), 0x481DF0);
FunctionPointer(void, GimmeLumz_0, (int a1, int a2, unsigned __int8 a3, int a4, int a5, int* newLumCount), 0x4824A0);
FunctionPointer(HIE_tdstSuperObject*, fn_vGetUltraOperatorPerso, (char a1, HIE_tdstSuperObject* a2, HIE_tdstSuperObject** a3), 0x4825B0);
FunctionPointer(tdstNodeInterpret_*, _fn_p_stUltraOperator, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterp, tdstGetSetParam_* GetSetParam), 0x4825E0);
FunctionPointer(int, _fn_p_stModelCastOperator, (int, int, int), 0x482620);
FunctionPointer(int, fn_ucGetProcedureUltraOperator, (int a1), 0x482680);
FunctionPointer(int, fn_p_fn_pGetProcedureFunctionPtr, (int a1), 0x482690);
FunctionPointer(unsigned __int8, fn_ucIsRuleAndNodeInActionTable, (tdstIntelligence_* a1), 0x482730);
FunctionPointer(int, initActionEntry, (tdstIntelligence_* intelligence, unsigned __int8 a2, char a3, tdstNodeInterpret_* nodeInterpreter, char a5), 0x4827B0);
FunctionPointer(int, _fn_vUnuseCurrentActionTableEntry, (tdstIntelligence_* a1), 0x482820);
FunctionPointer(char, _fn_vUnuseAllRulesWhichHaveGreaterNumRule, (tdstIntelligence_* a1, unsigned __int8 a2), 0x482870);
FunctionPointer(int, initSomeActionEntries, (int a1), 0x4828E0);
FunctionPointer(double, fn_xDistanceBetweenPersoAndWP, (), 0x482AD0);
FunctionPointer(struct_DnmReport*, __Z18fn_pstGetDNMReportP20HIE_tdstSuperObject_, (HIE_tdstSuperObject* superObject), 0x482E20);
FunctionPointer(int, fn_ucIsThereFloatIfYesConvertItToInteger, (int a1), 0x482EA0);
FunctionPointer(int, fn_ucAreThereFloatIfYesConvertThem, (int, int), 0x482F10);
FunctionPointer(int, __Z19fn_vAffectZddInListP9tdstList_P20HIE_tdstSuperObject_hs, (int, int, int, int), 0x483740);
FunctionPointer(bool, fn_ucAtLeastOnePersoInZde, (HIE_tdstSuperObject* a1, char a2, unsigned __int8 a3, int a4), 0x4838B0);
FunctionPointer(int, fn_p_stDefaultActionInit_0, (int, char, int), 0x483930);
FunctionPointer(int, CAM_fn_vComputeRefAxis, (int, int), 0x483BE0);
FunctionPointer(int, CAM_fn_vComputeReferencePoint, (int a1), 0x483F90);
FunctionPointer(int, CAM_fn_vComputeTarget, (int a1), 0x4840A0);
FunctionPointer(int, CAM_fn_vBoundAngleWithTolerance, (int, int, int, int, int, float), 0x4841F0);
FunctionPointer(int, CAM_fn_vComputeCameraAxisAngles, (int, int, int, int, int), 0x484390);
FunctionPointer(int, CAM_fn_vRotateCameraAxis, (int, int, int, int), 0x484470);
FunctionPointer(int, CAM_fn_vComputeRealWantedPos, (int a1), 0x484540);
FunctionPointer(int, CAM_fn_cDynChangeTheta, (int, int), 0x4845E0);
FunctionPointer(int, CAM_fn_vComputeMovePos, (int a1), 0x4847D0);
FunctionPointer(int, CAM_fn_vComputeMovePosWithDynTheta, (int a1), 0x484B00);
FunctionPointer(int, CAM_fn_vTakeCareOfFather, (int a1), 0x4857F0);
FunctionPointer(int, CAM_fn_vUpdateGeneralCamera, (float), 0x485810);
FunctionPointer(int, CAM_fn_vTestBadDistance, (int a1), 0x486FA0);
FunctionPointer(int, CAM_fn_vTestBadVisibility, (int a1), 0x4870C0);
FunctionPointer(int, CAM_fn_vTestOppositeCollision, (int a1), 0x4873B0);
FunctionPointer(int, fn_ucGetFunctionUltraOperator, (int a1), 0x487810);
FunctionPointer(int, fn_p_fn_pGetFunctionFunctionPtr, (int a1), 0x487820);
FunctionPointer(double, GLI_fn_xFogGetNear, (int a1), 0x487850);
FunctionPointer(void, WP_fnv_WayPoint_ComputeLocation, (WP_tdstWayPoint_* wayPoint, Vector3* loc), 0x487860);
FunctionPointer(signed int, WPG_fn_lGetArcCapabilities_sub, (int a1, WP_tdstGraphNode_* graphNode, int a3), 0x487B10);
FunctionPointer(char*, _WPARC_CreateArc, (WP_tdstGraphNode_* graphNode, int a2, int a3), 0x487BD0);
FunctionPointer(int, fn_p_fn_pGetKeyWordFunctionPtr, (int a1), 0x487D50);
FunctionPointer(int, fn_p_fn_pGetConditionFunctionPtr, (int a1), 0x487D70);
FunctionPointer(int, szGetMetaActionTypeInParamFromId, (int a1), 0x487D90);
FunctionPointer(int, _fn_p_fn_pGetMetaActionInitFunctionPtr, (int a1), 0x487DA0);
FunctionPointer(int, _fn_p_fn_pGetMetaActionFunctionPtr, (int a1), 0x487DB0);
FunctionPointer(int, fn_vSetActionParamxValue, (int, int, float), 0x487DC0);
FunctionPointer(int, fn_lGetActionParamlValue, (int, int), 0x487E60);
FunctionPointer(int, fn_vSetActionParamStateValue, (int, int, int), 0x487EA0);
FunctionPointer(int, fn_vSetActionParamp_stVertex, (int, int, int), 0x487EF0);
FunctionPointer(int, fn_p_stPrepareMorph, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x487FD0);
FunctionPointer(int, fn_p_stStopMorph, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x4880B0);
FunctionPointer(int, fn_p_stIsMorphing, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x488100);
FunctionPointer(int, fn_p_stMorphing, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter), 0x488160);
FunctionPointer(int, MGT_fn_p_stActiveMagnet, (HIE_tdstSuperObject* a2, int), 0x488220);
FunctionPointer(int, MGT_fn_p_stDeactiveMagnet, (HIE_tdstSuperObject* a2, int), 0x488260);
FunctionPointer(int, MGT_fn_p_stSetParam, (HIE_tdstSuperObject* a2, int a3), 0x4882C0);
FunctionPointer(int, MGT_fn_p_stGetInfo, (HIE_tdstSuperObject* a2, int a3, int), 0x4883B0);
FunctionPointer(int, fn_p_stMagnetActivated, (HIE_tdstSuperObject* a2, int, int), 0x488480);
FunctionPointer(int, CAM_fn_p_stGetVectorParameter, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x488590);
FunctionPointer(int, CAM_fn_p_stGetRealParameter, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x4886A0);
FunctionPointer(int, CAM_fn_p_stGetTargetedSuperObject, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x4889C0);
FunctionPointer(int, CAM_fn_p_stGetTypeOfViewport, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x488A80);
FunctionPointer(int, CAM_fn_p_stGetSectorCameraType, (HIE_tdstSuperObject* a2, int, int), 0x488B50);
FunctionPointer(int, CAM_fn_p_stGetCameraOfViewport, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int GetSetParam), 0x488BB0);
FunctionPointer(int, CAM_fn_p_stComputeTargetWithTgtPerso, (HIE_tdstSuperObject* a2, int, int), 0x488CB0);
FunctionPointer(int, CAM_fn_p_stComputeCurrentTarget, (HIE_tdstSuperObject* a2, int, int), 0x488DC0);
FunctionPointer(int, CAM_fn_p_stGetBestPos, (HIE_tdstSuperObject* a2, int, int), 0x488E20);
FunctionPointer(int, fn_p_stMainActorKeyWord, (int, int, int), 0x489050);
FunctionPointer(int, fn_p_stCapsNullKeyWord, (int, int, int), 0x489110);
FunctionPointer(tdstNodeInterpret_*, fn_p_stIfKeyWord_SwapParams, (tdstNodeInterpret_* nodeInterpret_A, tdstNodeInterpret_* nodeInterpret_B), 0x489190);
FunctionPointer(tdstNodeInterpret_*, fn_p_stIfDebug, (HIE_tdstSuperObject* a1, tdstNodeInterpret_* a2, int a3), 0x4891D0);
FunctionPointer(int, fn_p_stIfNotU64, (int, int, int), 0x489210);
FunctionPointer(tdstNodeInterpret_*, _fn_p_stIfKeyWord, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, tdstGetSetParam_* GetSetParam), 0x489250);
FunctionPointer(int, CAM_fn_p_stIs, (HIE_tdstSuperObject* a2, int a3, int), 0x4894D0);
FunctionPointer(tdstNodeInterpret_*, _fn_p_stComparisonCondition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* interpreter, tdstGetSetParam_* getSetParam), 0x489830);
FunctionPointer(tdstNodeInterpret_*, fn_p_stButtonCondition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, uint32_t* params), 0x489C80);
FunctionPointer(int, fn_p_stZDDCondition, (int, int, int), 0x489D60);
FunctionPointer(int, _fn_p_stZDECondition, (int, int, int), 0x489EE0);
FunctionPointer(int, fn_p_stReportThisPerso, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x48A430);
FunctionPointer(int, fn_p_stReportOnZDMSurfaceCondition, (HIE_tdstSuperObject* a2, int a3, int), 0x48A4F0);
FunctionPointer(int, fn_p_stListCondition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48A6F0);
FunctionPointer(tdstNodeInterpret_*, fn_p_stTimeCondition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, uint32_t* returnValue), 0x48A840);
FunctionPointer(int, fn_p_stValidityCondition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48A8A0);
FunctionPointer(tdstNodeInterpret_*, fn_p_stMiscCondition, (int superObject, int nodeInterpreter, int a_getSetParam), 0x48A950);
FunctionPointer(int, fn_p_stSectorCondition, (HIE_tdstSuperObject* a2, int a3, int), 0x48ACE0);
FunctionPointer(int, fn_p_stLightCondition, (HIE_tdstSuperObject* a2, int a3, int), 0x48AD90);
FunctionPointer(int, fn_p_st_ActivationCondition, (HIE_tdstSuperObject* a2, int nodeInterp, uint32_t* a3), 0x48AE10);
FunctionPointer(int, fn_p_st_HandledCondition, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48AE60);
FunctionPointer(int, fn_p_st_UserEvent_IsSet, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48AEA0);
FunctionPointer(int, fn_p_stAlw_IsMine, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x48AF80);
FunctionPointer(int, fn_p_stZDMCollideWithObstacle, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48B000);
FunctionPointer(int, fn_p_stCustomBitsCond, (HIE_tdstSuperObject* a2, int a3, int), 0x48B0C0);
FunctionPointer(int, fn_p_stCollisionWP, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48B190);
FunctionPointer(int, fn_p_stNullVector, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48B2D0);
FunctionPointer(int, fn_p_stMechanicOption, (HIE_tdstSuperObject* a2, int, int), 0x48B380);
FunctionPointer(int, fn_p_stCheckAnimEnd, (HIE_tdstSuperObject* a2, int a3, int), 0x48B620);
FunctionPointer(int, fn_p_stHierarchySon, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* nodeInterpreter, int), 0x48B6E0);
FunctionPointer(tdstNodeInterpret_*, fn_p_stCheckCapabilities, (HIE_tdstSuperObject* a2, tdstNodeInterpret_* interp, tdstGetSetParam_* params), 0x48B7A0);
FunctionPointer(int, fn_p_stIsPersoActive, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter, int), 0x48B920);
FunctionPointer(int, fn_p_stIsCollisionFlag, (HIE_tdstSuperObject* a2, int a3, int), 0x48B980);
FunctionPointer(int, fn_p_stIsOf, (HIE_tdstSuperObject* a2, int a3, int), 0x48BA50);
FunctionPointer(int, fn_p_stAJoypadIsJoystickControlAvailable, (int, int, int), 0x48BB10);
FunctionPointer(int, fn_p_stAKeyJustPressed_unsure, (int, int, int), 0x48BB30);
FunctionPointer(int, fn_p_stAButtonPadJustPressed_unsure, (int, int, int), 0x48BB50);
FunctionPointer(int, fn_p_stDemoCondition_unsure, (int, int, int), 0x48BB70);
FunctionPointer(int, fn_p_stIsInStereoMode_unsure, (int, int, int), 0x48BB90);
FunctionPointer(int, fn_p_stIsMusicPlaying_unsure, (int, int, int), 0x48BBA0);
FunctionPointer(int, fn_p_stDummyCondition, (int, int, int), 0x48BBB0);
FunctionPointer(int, __Z18fn_p_stCamCineInitP20HIE_tdstSuperObject_P18tdstNodeInterpret_, (HIE_tdstSuperObject* superObject, tdstNodeInterpret_* nodeInterpreter), 0x48BEE0);
FunctionPointer(int, __Z24fn_ucCamCineMoveAToBTgtCP20HIE_tdstSuperObject_, (int a1), 0x48C280);
FunctionPointer(int, __Z25fn_ucCamCineMoveAToBTgtACP20HIE_tdstSuperObject_, (int a1), 0x48C3D0);
FunctionPointer(int, __Z20fn_ucCamCinePosATgtBP20HIE_tdstSuperObject_, (int a1), 0x48C610);
FunctionPointer(int, __Z27fn_ucCamCinePosAMoveTgtBToCP20HIE_tdstSuperObject_, (int a1), 0x48C660);
FunctionPointer(int, __Z28fn_ucCamCinePosATgtBTurnPosHP20HIE_tdstSuperObject_, (int a1), 0x48C7C0);
FunctionPointer(int, __Z28fn_ucCamCinePosATgtBTurnPosVP20HIE_tdstSuperObject_, (int a1), 0x48C900);
FunctionPointer(int, __Z28fn_ucCamCinePosATgtBTurnTgtHP20HIE_tdstSuperObject_, (int a1), 0x48CA40);
FunctionPointer(int, __Z28fn_ucCamCinePosATgtBTurnTgtVP20HIE_tdstSuperObject_, (int a1), 0x48CB80);
FunctionPointer(int, __Z24fn_p_stExecuteActionInitP20HIE_tdstSuperObject_P18tdstNodeInterpret_, (HIE_tdstSuperObject* characterStruct, int), 0x48CCC0);
FunctionPointer(int, __Z18fn_ucExecuteActionP20HIE_tdstSuperObject_, (int a1), 0x48CD30);
FunctionPointer(int, __Z20fn_ucWaitEndOfActionP20HIE_tdstSuperObject_, (int a1), 0x48CD80);
FunctionPointer(int, __Z18fn_ucWaitEndOfAnimP20HIE_tdstSuperObject_, (int a1), 0x48CDA0);
FunctionPointer(int, fn_p_stFrozenWaitInit, (int, int), 0x48CDC0);
FunctionPointer(int, __Z15fn_ucFrozenWaitP20HIE_tdstSuperObject_, (int a1), 0x48CE00);
FunctionPointer(int, CMP_fn_vFirstInit_unsure, (), 0x48D2A0);
FunctionPointer(char, wrong_SaveTheGame_2_Validate, (const char* saveName, const char* TempFile, char _thisIsAlwaysTwo), 0x48D370);
FunctionPointer(char, save_magicIntToChar, (unsigned __int8 theInt), 0x48D420);
FunctionPointer(int, getOneByteAndXorWith53, (int DstBuf), 0x48D450);
FunctionPointer(int, writeToASaveFile_Write, (char Str, FILE* File), 0x48D470);
FunctionPointer(int, getFourBytesAndXorWith0x54555657, (int DstBuf), 0x48D4B0);
FunctionPointer(int, saveDecryptMagic_1, (FILE* File), 0x48D5A0);
FunctionPointer(int, preSave, (), 0x48D660);
FunctionPointer(int, writeToASaveFile, (int, FILE* File), 0x48D6B0);
FunctionPointer(void, ValidateSaveFile, (FILE* readHandle, FILE* tempWriteHandle), 0x48D890);
FunctionPointer(int, allocateSomeSaveArray, (char* Filename), 0x48DAE0);
FunctionPointer(int, closeAndFreeFile, (void* Memory), 0x48DBC0);
FunctionPointer(char, INT_fn_bDetectIntersectSegmentWithFaceOfCollideObject, (Vector3* vector1, Vector3* vector2, COL_tdstCollideObject_* collideObject), 0x48EE70);
FunctionPointer(void, COL_fn_vAddInStaticCollisionTable, (float radius, Vector3* a_vec1, Vector3* a_vec2, Vector3* a_vec3, GMT_tdstGameMaterial_* a_gmt1, GMT_tdstGameMaterial_* a_gmt2, __int16 a7, __int16 a8, int a9, __int16 a10, Vector3* a_vec4, float a12, Vector3* a_vec5), 0x48FCA0);
FunctionPointer(int, INT_fn_bIntersectSphereWithBox, (int, float, int, int), 0x490230);
FunctionPointer(int, INT_fn_bIntersectSphereWithSphere, (int, float, int, float), 0x4902F0);
FunctionPointer(int, INT_fn_bDetectIntersectSegmentWithBox, (int, int, int, int, int), 0x490860);
FunctionPointer(int, INT_fn_bGetPointInTriangle, (int, int, int, int, int), 0x490CD0);
FunctionPointer(int, INT_fn_bFastRejectIntersectSegmentWithTriangle, (int, int, int, int, int), 0x490FA0);
FunctionPointer(int, INT_fn_bIntersectSegmentWithTriangle, (int, int, int, int, int, int, float, int, int), 0x491250);
FunctionPointer(int, INT_fn_bIntersectSegmentWithTriangle2, (int, int, int, int, int, int, float, float, int, int), 0x491380);
FunctionPointer(bool, INT_fn_bDetectIntersectSegmentWithTriangle, (int a1, int a2, int a3, int a4, int a5, Vector3* normal, float a7), 0x4914D0);
FunctionPointer(int, INT_fn_bGetInclusionPointInSphere, (int, int, float), 0x4915E0);
FunctionPointer(int, INT_fn_bDetectIntersectSegmentWithTriangle_0, (int, int, int, int), 0x491A50);
FunctionPointer(int, COL_fn_vMinMaxBox2VerticesBox, (int, int, int), 0x492430);
FunctionPointer(char*, GetDLLDir, (), 0x492680);
FunctionPointer(int, fn_szGetGameDataPath, (), 0x4926C0);
FunctionPointer(int, saveGameFolder, (), 0x492700);
FunctionPointer(char*, _fn_szGetLevelsDataPath, (), 0x492770);
FunctionPointer(int, SomethingWithGF, (), 0x492810);
FunctionPointer(int, fn_vComputeTempDataPath, (), 0x492860);
FunctionPointer(int, GetBuffer, (), 0x4928C0);
FunctionPointer(int, FIL_fn_vFirstInit_unsure, (), 0x4928D0);
FunctionPointer(int, FileExists_, (const char* Filename), 0x4929C0);
FunctionPointer(char, makeSavePath, (const char* aDot, const char* saveName), 0x492A10);
FunctionPointer(int, FileExistsAndGetLength, (const char* fileName), 0x492BF0);
FunctionPointer(void*, FIL_fn_vOpenConcatFile, (const char* fileName), 0x493300);
FunctionPointer(int, FIL_fn_vCloseConcatFile, (int a1), 0x493590);
FunctionPointer(GFInfo*, LoadGFFile, (CNTInfo* cnt, const char* optFolder, const char* gfName), 0x4935C0); // Seek texture in CNT if "cnt" not null, seek in optFolder if "cnt" null or texture not found
FunctionPointer(void, FIL_fn_vCloseFileInConcatFile, (CNTInfo* cnt), 0x4938D0); // Close the file from memory if loaded from CNT, close the file handle if loaded from folder
FunctionPointer(void, ReadGFFileInStruct, (CNTInfo* cnt, const char* optFolder, const char* gfName, TexOutputStruct* output), 0x493A40);
FunctionPointer(DWORD, COL_lHaveITakeSThgIntoTheMug, (DNM_stMecObstacle* a_obstacle, HIE_tdstSuperObject* spo, int a3, int a4), 0x494290);
FunctionPointer(int, fn_vCollideStaticCharacterWithStaticPhysicals, (int, int, int, int, int), 0x4943C0);
FunctionPointer(int, fn_vNewTestStaticCollideFor2Characters, (int, int, int, int, int), 0x494420);
FunctionPointer(char, COL_fn_vNewStaticCollisionForCharacter, (HIE_tdstSuperObject* spo, int a2, int a3, int a4), 0x494610);
FunctionPointer(int, _COL_fn_vStaticCollisionWithPartOfTreeForSector, (int, int, int, int, int), 0x4948A0);
FunctionPointer(HIE_tdstSuperObject*, ChangeHealth_Cheat, (DNM_stDynamics* a1, char a2), 0x4949C0);
FunctionPointer(int, ANI_fn_vFreeze, (int a1), 0x494C10);
FunctionPointer(int, ANI_fn_vUnFreeze, (int a1), 0x494C30);
FunctionPointer(int, IPT_fn_vInitInputWhenLoadSnapshot_maybe, (int a1), 0x4953A0);
FunctionPointer(__int16, VirtualKeyToAscii, (wchar_t Char, int a2), 0x496110);
FunctionPointer(int, _IPT_fn_vReadInput, (int a1), 0x496510);
FunctionPointer(int, CheckCheat, (int a2), 0x496710);
FunctionPointer(int, _DNM_fn_p_stMecMatCharacteristicsGiveBackSemantic, (int mechanicsMaterial), 0x497150);
StdcallFunctionPointer(int, _SND_fn_vInitMallocSnd, (), 0x497470);
StdcallFunctionPointer(int, _SND_fn_vDesInitMallocSnd, (), 0x497540);
StdcallFunctionPointer(int, _SND_fn_pvMallocSnd, (int a1), 0x4975C0);
StdcallFunctionPointer(int, _SND_fn_pvMallocSndEx, (int, int), 0x497660);
StdcallFunctionPointer(int, _SND_fn_pvReAllocSnd, (int, int), 0x497700);
StdcallFunctionPointer(int, _SND_fn_pvReAllocSndEx, (int, int, int), 0x4977A0);
StdcallFunctionPointer(int, _SND_fn_vFreeSnd, (int a1), 0x497850);
StdcallFunctionPointer(int, _SND_fn_vFreeSndEx, (int, int), 0x4978F0);
StdcallFunctionPointer(int, _SND_fn_vResizeMemoryBlockSnd, (int, SIZE_T dwBytes), 0x497990);
FunctionPointer(int, _strnicmp_, (const char* Str1, const char* Str, size_t MaxCount), 0x4979C0);
FunctionPointer(int, toupper_, (int C), 0x4979C6);
FunctionPointer(void, qsort_, (void* Base, size_t NumOfElements, size_t SizeOfElements, int(__cdecl* PtFuncCompare)(const void*, const void*)), 0x497A04);
FunctionPointer(int, fseek_, (FILE* File, __int32 Offset, int Origin), 0x497A0A);
FunctionPointer(int, _filbuf_, (FILE* File), 0x497A10);
FunctionPointer(int, _flsbuf_, (int Ch, FILE* File), 0x497A16);
FunctionPointer(void*, calloc_, (size_t NumOfElements, size_t SizeOfElements), 0x497A1C);
FunctionPointer(__int32, ftell_, (FILE* File), 0x497A28);
FunctionPointer(void, rewind_, (FILE* File), 0x497A2E);
FunctionPointer(int, COL_fn_vInitCollideStaticGeomObjWithStaticGeomObj, (int a1), 0x498F80);
FunctionPointer(int, COL_fn_vComputeCollisionStaticGeomObjWithStaticGeomObj, (float), 0x499070);
FunctionPointer(int, COL_fn_vCollideStaticGeomObj1WithStaticGeomObj2, (int, int, int, int, int, int, __int16, char, char), 0x4990F0);
FunctionPointer(void, COL_fn_vEnlargeSphereIfNecessary, (COL_tdstGVForCollision_* a1), 0x499230);
FunctionPointer(COL_tdstGVForCollision_*, COL_fn_vUseInitialSphere, (uint32_t a1), 0x499340);
FunctionPointer(int, COL_fn_vUseEnlargeSphere, (int sphere), 0x4993C0);
FunctionPointer(int, COL_fn_bCollideStaticSphereWithStaticIndexedTriangle, (int a1), 0x499440);
FunctionPointer(int, COL_fn_vCollideStaticElementSpheresWithStaticElementIndexedTriangles, (float), 0x499A80);
FunctionPointer(void, COL_fn_vCollideStaticSphereWithStaticSphere, (float radius), 0x499CF0);
FunctionPointer(void, COL_fn_vCollideStaticElementSpheresWithStaticElementSpheres, (COL_tdstGVForCollision_* a1), 0x49A0E0);
FunctionPointer(int, COL_fn_vCollideStaticElementSpheresWithStaticOctree, (float), 0x49A250);
FunctionPointer(void, COL_fn_vCollideStaticElementSpheresWithStaticElements, (COL_tdstGVForCollision_* a1), 0x49A690);
FunctionPointer(int, COL_fn_bCollideStaticElementSpheresWithStaticBoundingVolumes, (int, int, char), 0x49A7D0);
FunctionPointer(int, COL_fn_bCollideStaticSphereWithStaticIndexedTriangle_0, (float, int), 0x49AA20);
FunctionPointer(char*, _itoa_, (int Val, char* DstBuf, int Radix), 0x49B1A0);
FunctionPointer(char*, _strupr_, (char* Str), 0x49B1C4);
FunctionPointer(int, _unlink_, (const char* Filename), 0x49B1CA);
FunctionPointer(int, CreateGameWindow_dup, (HINSTANCE hInstance, int nCmdShow), 0x519020);
FunctionPointer(int, MessageBoxShowB, (LPCSTR lpText, LPCSTR lpCaption, UINT uType), 0x5198F0);
FunctionPointer(int, fn_ulStandardGameGetCustomBitsSO, (HIE_tdstSuperObject* superObject), 0x52A700);
FunctionPointer(double, fn_xMSMagnetGetFar, (int a1), 0x52C160);
FunctionPointer(int, fn_vMSMagnetSetStatus, (int, char), 0x52C220);
FunctionPointer(int, fn_hMSMagnetGetMagnetModification, (int, __int16), 0x52C2C0);
FunctionPointer(HIE_tdstSuperObject*, fn_h_SectInfoGetCurrentSector, (tdstSectInfo_* sectorInfo), 0x530B90);
FunctionPointer(int, GEO_vSetZFar, (int a1), 0x535E30);
FunctionPointer(int, GEO_vSetZFarTransparencyZone, (float), 0x535E50);
FunctionPointer(int, PrepareGraphics, (int, int), 0x538390);
FunctionPointer(int, LoadGLILibrary2, (), 0x538880);
FunctionPointer(int, OpenFilePredefined, (), 0x53A7F0);
FunctionPointer(int, GLI_vResetTableOfActiveLightsForChar_unsure, (char), 0x53DA50);
FunctionPointer(int, GLI_vAddLightToViewport, (int, int), 0x53DB80);
FunctionPointer(int, GLI_vPopLightsInViewport, (int, int), 0x53DBA0);
FunctionPointer(int, gl_resetNumberOfLightsInViewport, (), 0x53DBC0);
FunctionPointer(int, _GLI_xSetViewportLightsOnOff, (char), 0x53DBD0);
FunctionPointer(int, GLI_ucGetObjectLighted, (int a1), 0x53E0C0);
FunctionPointer(int, gl_sinusEffectsAndLightingStuff, (int, int, int), 0x541AE0);
FunctionPointer(int, _MEC_fn_vReportCollision_unused, (int, int, int, int, int), 0x556510);
FunctionPointer(int, _MEC_fn_vFillCollisionReport_unused, (int a1), 0x556940);
FunctionPointer(int, MGT_fn_vDeleteMagnetFromMagnetList, (__int16), 0x557C60);
FunctionPointer(int, MGT_fn_vComputeInfluence, (int, float, int), 0x5580D0);
FunctionPointer(int, MGT_fn_bComputeInfluenceOnSuperObject, (float, int, float, int), 0x5581B0);
FunctionPointer(int, MGT_fn_vClearMagnetModificationFlagInHierarchy, (int a1), 0x5583F0);
FunctionPointer(int, MGT_fn_vUpdateInfluence, (int a1), 0x558740);
FunctionPointer(int, MGT_fn_vSetMagnetModificationUse, (int, char), 0x558770);
FunctionPointer(int, MGT_fn_vClearInfluencedPointsOfMagnetModification, (int a1), 0x5592A0);
FunctionPointer(int, NotUsed, (int, int, int), 0x55A360);
FunctionPointer(int, AllocateSNADataPointerPart, (int a1), 0x55A3C0);
FunctionPointer(int, AllocateSNADataPartPointers, (int, int), 0x55A490);
FunctionPointer(int, FreeSNAPartMemory_0, (int a1), 0x55A4E0);
FunctionPointer(int, NotUsed_0, (int, int, int), 0x55A560);
FunctionPointer(int, SECT_fn_xSendStaticLightsToViewportForChar, (int, int), 0x561E30);
FunctionPointer(int, SECT_fn_vSendFogToViewport, (int, int), 0x561E80);
FunctionPointer(int, SCT_fn_vSendSectorWhereIAmToViewport_unused, (int, int, int, int), 0x5622E0);
FunctionPointer(double, fn_xGetSectorZFar, (int a1), 0x5632E0);
FunctionPointer(int, SHW_fn_vDrawShadow, (int, float, int, int), 0x563570);
FunctionPointer(int, ReadLEVELS0DAT_4, (), 0x564E60);
StdcallFunctionPointer(int, DecodeLEVELS0DAT, (int, int, int, int, int), 0x565750);
FunctionPointer(int, _HIE_fn_bPopMatrix, (), 0x5727E0);
FunctionPointer(int, HIE_fn_vPopMatrix, (), 0x572FF0);
FunctionPointer(int, HIE_fn_vPopOnCameraMatrixStack_0, (), 0x573020);
FunctionPointer(void, _HIE_fn_vSendCharacterToViewport_unused, (int a1, HIE_tdstSuperObject* superObject, int a3, int a4), 0x573450);
FunctionPointer(int, _HIE_vSetCharactereRLI, (char, char, char, int), 0x573DA0);
FunctionPointer(int, UNUSED_SetVignette, (int, char* Src, int), 0x576880);
FunctionPointer(void*, malloc_0, (size_t Size), 0x576C96);
FunctionPointer(void, free_0, (void* Memory), 0x576C9C);
FunctionPointer(int, fclose_0, (FILE* File), 0x576CA8);
FunctionPointer(FILE*, fopen_0, (const char* Filename, const char* Mode), 0x576CB4);
FunctionPointer(int, sprintf_0, (char* Dest, const char* Format, ...), 0x576E70);
FunctionPointer(int, ___alloca_probe, (char), 0x576E80);
FunctionPointer(int, atoi_0, (const char* Str), 0x576EB6);
FunctionPointer(char*, strchr_0, (const char* Str, int Val), 0x576EBC);
FunctionPointer(int, sscanf_0, (const char* Src, const char* Format, ...), 0x576EC2);
FunctionPointer(int, remove_0, (const char* Filename), 0x576ECE);
FunctionPointer(size_t, fread_0, (void* DstBuf, size_t ElementSize, size_t Count, FILE* File), 0x576ED4);
FunctionPointer(int, strncmp_0, (const char* Str1, const char* Str2, size_t MaxCount), 0x576EE6);
FunctionPointer(char*, strncpy_0, (char* Dest, const char* Source, size_t Count), 0x576EF8);
FunctionPointer(double, difftime_0, (time_t Time1, time_t Time2), 0x576F10);
FunctionPointer(int, rand_0, (), 0x576F22);
FunctionPointer(void*, memmove_0, (void* Dst, const void* Src, size_t Size), 0x576F2E);
FunctionPointer(char*, strrchr_0, (const char* Str, int Ch), 0x576F3A);
FunctionPointer(int, tolower_0, (int C), 0x576F40);
FunctionPointer(void, srand_0, (unsigned int Seed), 0x576F46);
FunctionPointer(int, _stricmp_0, (const char* Str1, const char* Str2), 0x576F58);
FunctionPointer(time_t, time_0, (time_t* Time), 0x576F5E);
FunctionPointer(unsigned int, _controlfp_0, (unsigned int NewValue, unsigned int Mask), 0x576F96);
FunctionPointer(void, qsort_0, (void* Base, size_t NumOfElements, size_t SizeOfElements, int(__cdecl* PtFuncCompare)(const void*, const void*)), 0x5AEA04);
FunctionPointer(int, fseek_0, (FILE* File, __int32 Offset, int Origin), 0x5AEA0A);
FunctionPointer(int, _filbuf_0, (FILE* File), 0x5AEA10);
FunctionPointer(int, _flsbuf_0, (int Ch, FILE* File), 0x5AEA16);
FunctionPointer(void*, calloc_0, (size_t NumOfElements, size_t SizeOfElements), 0x5AEA1C);
FunctionPointer(int, glivd1vf_default_GLI_DRV_xClearViewingList, (), 0x2521140);
FunctionPointer(int, glivd1vf_default_GLI_DRV_vComputeFogEffect, (), 0x25212F0);
FunctionPointer(int, glivd1vf_default_GLI_DRV_xSendElementTIToClip_TRIANGLES, (int, int), 0x2522EE0);

// void __usercall(void *a1@<ecx>, double threadParam@<st0>)
static const void* const UpdateLevelLoadingPtr = (void*)0x404700;
static inline void UpdateLevelLoading(void* a1)
{
	__asm
	{
		mov ecx, [a1]
		call UpdateLevelLoadingPtr
	}
}

// tdstState_ *__usercall@<eax>(tdstState_ *animState@<edi>, HIE_tdstSuperObject *superObject)
static const void* const PLA_fn_vComputeNextFramePtr = (void*)0x40EDF0;
static inline tdstState_* PLA_fn_vComputeNextFrame(tdstState_* animState, HIE_tdstSuperObject* superObject)
{
	tdstState_* result;
	__asm
	{
		push[superObject]
		mov edi, [animState]
		call PLA_fn_vComputeNextFramePtr
		add esp, 4
		mov result, eax
	}
	return result;
}

// int *__usercall@<eax>(Vector3 *vector@<ecx>, int a2@<edx>, int a3, int a4, HIE_tdstSuperObject *sector, int a6, int a7)
static const void* const SCT_fn_vSendSectorToViewportDynamicPtr = (void*)0x44B1B0;
static inline int* SCT_fn_vSendSectorToViewportDynamic(Vector3* vector, int a2, int a3, int a4, HIE_tdstSuperObject* sector, int a6, int a7)
{
	int* result;
	__asm
	{
		push[a7]
		push[a6]
		push[sector]
		push[a4]
		push[a3]
		mov edx, [a2]
		mov ecx, [vector]
		call SCT_fn_vSendSectorToViewportDynamicPtr
		add esp, 20
		mov result, eax
	}
	return result;
}

// char __usercall@<al>(struct_fixFileObject *fixFileObject@<ebp>)
static const void* const SNA_fn_bGetHandleToRelocationTablePtr = (void*)0x44D9C2;
static inline char SNA_fn_bGetHandleToRelocationTable(struct_fixFileObject* fixFileObject)
{
	char result;
	__asm
	{
		mov ebp, [fixFileObject]
		call SNA_fn_bGetHandleToRelocationTablePtr
		mov result, al
	}
	return result;
}

// char __usercall@<al>(void *ecx0@<ecx>, double a2@<st0>, int input)
static const void* const SNA_fn_vReadSectionFromDscFilePtr = (void*)0x4508A0;
static inline char SNA_fn_vReadSectionFromDscFile(void* ecx0, int input)
{
	char result;
	__asm
	{
		push[input]
		mov ecx, [ecx0]
		call SNA_fn_vReadSectionFromDscFilePtr
		add esp, 4
		mov result, al
	}
	return result;
}

#endif